[2023-10-12 00:20:54,650] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:20:54,739] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 00:20:54,745] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 00:20:54,914] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 00:20:54,920] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 00:20:54,922] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 00:20:54,924] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 00:20:55,096] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 00:20:55,104] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:20:55,113] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 00:20:55,123] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:20:55,124] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:20:55,124] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:20:55,124] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 00:20:55,128] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,129] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,129] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 00:20:55,129] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 00:20:55,134] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 00:20:55,135] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 00:20:55,147] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:20:55,149] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:20:55,192] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:20:55,195] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:20:55,199] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 00:20:55,199] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:20:55,206] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:20:55,239] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:20:55,240] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 00:20:55,251] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,251] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,251] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,251] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 00:20:55,254] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 00:20:55,268] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 00:21:00,279] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:21:00,280] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:24:59,370] INFO [Controller id=0] New topics: [Set(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(utrPVaQIRk-6vmz4d_bEsQ),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:24:59,371] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 00:25:06,706] DEBUG [Controller id=0] Delete topics listener fired for topics 1-destination to be deleted (kafka.controller.KafkaController)
[2023-10-12 00:25:06,706] INFO [Controller id=0] Starting topic deletion for topics 1-destination (kafka.controller.KafkaController)
[2023-10-12 00:25:06,708] INFO [Topic Deletion Manager 0] Handling deletion for topics 1-destination (kafka.controller.TopicDeletionManager)
[2023-10-12 00:25:06,710] INFO [Topic Deletion Manager 0] Deletion of topic 1-destination (re)started (kafka.controller.TopicDeletionManager)
[2023-10-12 00:25:06,811] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(1-destination-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-10-12 00:25:06,816] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=1-destination,Partition=0,Replica=0]. Halting deletion for topics Set(1-destination) (kafka.controller.TopicDeletionManager)
[2023-10-12 00:25:06,818] INFO [Topic Deletion Manager 0] Halted deletion of topics 1-destination due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-10-12 00:25:06,818] INFO [Topic Deletion Manager 0] Handling deletion for topics 1-destination (kafka.controller.TopicDeletionManager)
[2023-10-12 00:25:06,819] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics 1-destination since replicas [Topic=1-destination,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-10-12 00:28:20,072] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:28:20,224] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 00:28:20,238] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 00:28:20,286] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 00:28:20,290] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 00:28:20,293] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 00:28:20,294] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 00:28:20,306] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 00:28:20,311] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:28:20,329] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 00:28:20,341] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:28:20,341] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:28:20,341] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:28:20,342] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 00:28:20,348] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,348] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,349] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 00:28:20,349] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 00:28:20,825] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 00:28:20,827] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 00:28:20,839] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:28:20,841] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:28:20,847] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:28:20,848] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:28:20,848] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:28:20,848] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:28:20,854] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:28:20,854] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 00:28:20,859] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,859] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,860] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,860] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 00:28:20,861] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 00:28:20,873] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 00:28:21,356] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 00:28:25,885] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:28:25,886] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:33:25,889] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:33:25,889] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:38:25,904] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:38:25,904] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:42:57,241] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(DZboS0QYR7W7UPbTHwYqkg),Map(__consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:42:57,245] INFO [Controller id=0] New partition creation callback for __consumer_offsets-0 (kafka.controller.KafkaController)
[2023-10-12 00:42:57,345] INFO [Controller id=0] New topics: [HashSet(boardUpdates, 6-destination, 6-moveSignal, 6-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(6-moveSignal,Some(08qBm-hsRIiTtMbp_1tKCg),Map(6-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(6-positionUpdate,Some(gu2WeF8kTymbI4yW1W2xow),Map(6-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(6-destination,Some(sHFWcf2aSeGD_e5c0eMGhQ),Map(6-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(boardUpdates,Some(hPZ3Hb_JSXGGMuAZLrzGHQ),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:42:57,346] INFO [Controller id=0] New partition creation callback for 6-moveSignal-0,6-positionUpdate-0,6-destination-0,boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 00:42:57,399] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 00:43:12,843] INFO [Controller id=0] New topics: [HashSet(1-positionUpdate, 1-destination, 1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(zqa7iIlJS16iOw_BEjFRMg),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-moveSignal,Some(NBsgNVDdR3GoUI_qzvIdIg),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-positionUpdate,Some(e-eHO1BKSr6WngvscfJ1Wg),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:43:12,843] INFO [Controller id=0] New partition creation callback for 1-destination-0,1-moveSignal-0,1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 00:43:25,907] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:43:25,907] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:43:25,909] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 00:43:25,910] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 00:43:54,140] INFO [Controller id=0] New topics: [HashSet(2-moveSignal, 2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(K0_Pkly4TsOCpoZ5RvRg7Q),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(2-positionUpdate,Some(kxBaXfsISwuAhMCa6RD_MQ),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:43:54,140] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0,2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 00:43:54,175] INFO [Controller id=0] New topics: [HashSet(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(KkCW24-sSsKJMsMAhQmr9A),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:43:54,180] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 00:48:25,919] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:48:25,919] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:48:25,920] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 00:48:25,920] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 00:51:03,958] INFO [Controller id=0] New topics: [HashSet(7-positionUpdate, 7-moveSignal, 7-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(7-destination,Some(TKv4lqCZT9K5kTcFlRyJKQ),Map(7-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(7-positionUpdate,Some(9nSL_3OwTaOv7VSxdnKHcw),Map(7-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(7-moveSignal,Some(q3StQ2tMRVuu4SOVSbr6Cw),Map(7-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:51:03,959] INFO [Controller id=0] New partition creation callback for 7-destination-0,7-positionUpdate-0,7-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 00:53:23,690] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:53:23,690] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:53:23,690] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 00:53:23,690] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 00:56:12,086] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 00:56:12,088] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 00:56:12,089] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 00:56:12,095] TRACE [Controller id=0] All leaders = 7-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),6-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),7-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),6-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),6-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),7-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 00:56:12,419] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:56:12,420] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:56:12,421] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:56:12,421] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 00:56:12,421] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:56:12,422] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:56:12,423] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:56:12,423] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 00:56:12,423] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 00:56:12,423] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 00:56:12,425] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 00:56:36,536] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 00:56:36,600] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 00:56:36,604] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 00:56:36,650] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 00:56:36,663] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 00:56:36,665] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 00:56:36,668] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 00:56:36,686] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 00:56:36,692] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:56:36,709] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 00:56:36,721] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 00:56:36,721] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:56:36,721] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 00:56:36,721] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 00:56:36,726] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,726] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,726] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 00:56:36,726] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 00:56:36,770] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 00:56:36,788] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 00:56:36,979] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:56:36,980] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:56:36,985] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:56:36,986] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 00:56:36,986] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:56:36,987] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:56:36,991] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 00:56:36,991] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 00:56:36,998] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,998] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,998] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,998] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 00:56:36,999] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 00:56:37,012] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 00:56:37,499] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 00:56:42,017] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 00:56:42,018] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 00:57:26,856] INFO [Controller id=0] New topics: [Set(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(DMOdierKR0S7jxgbhqXA_Q),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:57:26,857] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 00:58:17,002] INFO [Controller id=0] New topics: [Set(1-moveSignal, __consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(0ZcTLoidTpm_Rge4-J3OPA),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(__consumer_offsets,Some(5UeNExhkTi2zlIc4MEGk5w),Map(__consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:58:17,002] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0,__consumer_offsets-0 (kafka.controller.KafkaController)
[2023-10-12 00:58:17,065] INFO [Controller id=0] New topics: [HashSet(1-positionUpdate, 1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(fPaeu67WSee-_i3VqA74fA),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-positionUpdate,Some(1frAmZAlReqJbwCcwMP0mw),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 00:58:17,066] INFO [Controller id=0] New partition creation callback for 1-destination-0,1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 01:01:42,034] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:01:42,035] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:01:42,037] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:01:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:06:42,046] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:06:42,046] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:06:42,047] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:06:42,047] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:11:42,049] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:11:42,049] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:11:42,049] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:11:42,049] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:12:17,328] INFO [Controller id=0] New topics: [HashSet(3-moveSignal, 3-destination, 3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(N86YDugaQmaxLdgzQ80OCA),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-destination,Some(i-4XeI9lSHSLrNUopZZ-ew),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-moveSignal,Some(U1XVsivkTciP_T4QRI977w),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:12:17,329] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0,3-destination-0,3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 01:12:17,371] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:14:39,444] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:14:39,445] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:14:39,445] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:14:39,447] TRACE [Controller id=0] All leaders = __consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:14:39,847] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:14:39,848] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:14:39,848] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:14:39,849] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:14:39,849] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:14:39,849] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:14:39,851] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:14:39,870] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:14:39,875] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:14:39,881] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:14:39,883] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 01:15:39,975] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:15:40,046] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 01:15:40,054] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 01:15:40,099] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 01:15:40,107] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 01:15:40,112] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 01:15:40,115] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 01:15:40,130] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 01:15:40,136] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:15:40,150] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 01:15:40,161] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:15:40,162] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:15:40,162] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:15:40,162] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 01:15:40,174] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,174] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,174] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 01:15:40,175] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 01:15:40,307] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 01:15:40,485] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:15:40,486] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:15:40,488] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:15:40,492] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:15:40,492] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:15:40,493] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:15:40,495] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:15:40,495] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 01:15:40,495] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 01:15:40,509] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,509] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,509] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,509] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 01:15:40,511] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 01:15:40,522] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 01:15:41,013] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:15:42,845] INFO [Controller id=0] New topics: [Set(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(w6-kP6t5RRGfbZofTsAPew),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:15:42,845] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 01:15:43,097] INFO [Controller id=0] New topics: [HashSet(1-positionUpdate, 3-moveSignal, 3-destination, __consumer_offsets, 1-destination, 1-moveSignal, 3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [HashSet(TopicIdReplicaAssignment(1-positionUpdate,Some(3S0eLM7-SFewV5mVGRFjYw),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-positionUpdate,Some(c9ALnuwXT66EbSIFp8qoDQ),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(__consumer_offsets,Some(x2JWzK58QUi_a_X73NvPiw),Map(__consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-destination,Some(EqnjMPvvQuiiSun-MRW-bg),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-moveSignal,Some(qOGFZx3yQAu6iCOaZ37s-Q),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-moveSignal,Some(_AVRa_qkRrWvhyQjOM6rxQ),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-destination,Some(UWhiCl6uT6aFdqHRZs-Fww),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:15:43,098] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0,3-positionUpdate-0,1-destination-0,3-moveSignal-0,1-positionUpdate-0,3-destination-0,__consumer_offsets-0 (kafka.controller.KafkaController)
[2023-10-12 01:15:45,534] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:15:45,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:15:45,537] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:15:45,538] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:20:45,552] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:20:45,552] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:20:45,553] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:20:45,553] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:25:45,568] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:25:45,568] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:25:45,570] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:25:45,570] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:30:45,581] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:30:45,582] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:30:45,582] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:30:45,582] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:32:56,618] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:32:56,618] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:32:56,619] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:32:56,622] TRACE [Controller id=0] All leaders = __consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:32:56,860] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:32:56,860] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:32:56,860] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:32:56,860] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:32:56,861] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:32:56,861] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:32:56,862] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:32:56,862] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:32:56,865] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:32:56,866] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:32:56,868] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 01:35:28,477] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:35:28,524] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-10-12 01:35:28,527] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 01:35:28,532] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 01:35:28,535] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 01:35:28,540] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 01:35:28,671] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 94) (kafka.controller.KafkaController)
[2023-10-12 01:35:28,696] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:35:28,727] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 01:35:28,740] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:35:28,740] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:35:28,740] INFO [Controller id=0] Current list of topics in the cluster: HashSet(3-moveSignal, 1-positionUpdate, 1-destination, boardUpdates, 1-moveSignal, 3-positionUpdate, 3-destination, __consumer_offsets) (kafka.controller.KafkaController)
[2023-10-12 01:35:28,741] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 01:35:28,747] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,747] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,748] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 01:35:28,751] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 01:35:28,795] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 01:35:28,812] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 01:35:28,851] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:35:28,862] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:35:28,967] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:35:28,967] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=3-destination,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-destination,Partition=0,Replica=0] -> OnlineReplica, [Topic=3-positionUpdate,Partition=0,Replica=0] -> OnlineReplica, [Topic=3-moveSignal,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-positionUpdate,Partition=0,Replica=0] -> OnlineReplica, [Topic=boardUpdates,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-moveSignal,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:35:28,969] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:35:28,976] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:35:28,977] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-0 -> OnlinePartition, 1-positionUpdate-0 -> OnlinePartition, 1-destination-0 -> OnlinePartition, 3-moveSignal-0 -> OnlinePartition, boardUpdates-0 -> OnlinePartition, 1-moveSignal-0 -> OnlinePartition, 3-positionUpdate-0 -> OnlinePartition, 3-destination-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:35:28,977] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-10-12 01:35:28,986] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,987] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,987] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,987] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 01:35:28,988] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 01:35:29,003] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 01:35:29,358] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:35:34,017] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:35:34,018] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:35:34,021] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:35:34,023] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:35:54,481] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:35:54,482] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:35:54,482] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:35:54,489] TRACE [Controller id=0] All leaders = __consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:35:54,756] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:35:54,756] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:35:54,756] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:35:54,757] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:35:54,757] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:35:54,758] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:35:54,758] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:35:54,759] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:35:54,759] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:35:54,759] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:35:54,760] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 01:36:23,848] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:36:23,997] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 01:36:24,024] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 01:36:24,074] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 01:36:24,079] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 01:36:24,083] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 01:36:24,087] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 01:36:24,100] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 01:36:24,109] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:36:24,123] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 01:36:24,135] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:36:24,136] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:36:24,136] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:36:24,137] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 01:36:24,140] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,140] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,140] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 01:36:24,172] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 01:36:24,184] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 01:36:24,365] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 01:36:24,374] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:36:24,374] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:36:24,377] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:36:24,377] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:36:24,378] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:36:24,379] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:36:24,382] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:36:24,383] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 01:36:24,388] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,388] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,388] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,388] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 01:36:24,390] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 01:36:24,400] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 01:36:24,897] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:36:29,402] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:36:29,402] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:36:30,845] INFO [Controller id=0] New topics: [Set(3-moveSignal, 1-moveSignal, 3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(bSsqS5k0RmWe_1CUsebrMQ),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-moveSignal,Some(o9CQZHjYQuy5x-jVU9jA5A),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(3-positionUpdate,Some(PjG8O8w9SkqK83p_dEV8CA),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:36:30,846] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0,1-moveSignal-0,3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 01:36:31,166] INFO [Controller id=0] New topics: [HashSet(1-positionUpdate, __consumer_offsets, 1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(ZwMvcvI9QxmpUO3c6f2QmQ),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(__consumer_offsets,Some(PHbhFlYaQGqvN9sw5akYlQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(1-positionUpdate,Some(9_F8rcjaShmqi47TWui0IQ),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:36:31,167] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,1-positionUpdate-0,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,1-destination-0,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-12 01:36:31,491] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(NWWSpPUATvW3D3PWqgYwpA),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:36:31,492] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 01:36:31,540] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(q-e9wpebRFabzKn6gB_mhA),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:36:31,540] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 01:39:48,078] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:39:48,078] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:39:48,078] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:39:48,084] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:39:48,387] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:39:48,387] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:39:48,387] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:39:48,388] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:39:48,388] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:39:48,389] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:39:48,389] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:39:48,390] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:39:48,390] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:39:48,390] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:39:48,391] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 01:40:10,487] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:40:10,537] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 01:40:10,540] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 01:40:10,621] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 01:40:10,635] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 01:40:10,639] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 01:40:10,641] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 01:40:10,656] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 01:40:10,663] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:40:10,676] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 01:40:10,688] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:40:10,688] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:40:10,688] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:40:10,689] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 01:40:10,698] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 01:40:10,699] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:40:10,699] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 01:40:10,700] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 01:40:11,087] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 01:40:11,095] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 01:40:11,101] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:40:11,101] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:40:11,112] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:40:11,113] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:40:11,113] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:40:11,115] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:40:11,120] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:40:11,120] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 01:40:11,129] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:40:11,129] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:40:11,129] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:40:11,129] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 01:40:11,130] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 01:40:11,142] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 01:40:11,614] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:40:16,161] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:40:16,161] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:44:07,794] INFO [Controller id=0] New topics: [Set(3-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(mJzXQ4WlRvi3Wt6U-4dLKQ),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:07,795] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:07,926] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(xRxbD6dyQKK-t_gZ_pvlrg),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:07,927] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:07,972] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(Bd3-sNrVQnGLB6NLkQQEKQ),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:07,972] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,074] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(d_ENru8lQNuhQscbZBiz3Q),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,074] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,101] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(EfcrVVsdT-GlacybuuE7jQ),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,101] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,120] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(X5r1VQW8RG68wOkynByX3A),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,120] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,139] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(GNibUmfXSsOc1-aRKYz4Ug),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,139] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,153] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(jcwc9LF2SBW6BBfuqEAtIQ),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,153] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,210] INFO [Controller id=0] New topics: [HashSet(3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(04LUCc_VSI2LNTIQbBj5RA),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,210] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 01:44:08,268] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(AaziR0OpRVmqg33dySM6Qg),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 01:44:08,268] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 01:45:16,168] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:45:16,168] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:45:16,170] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:45:16,172] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:50:16,180] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:50:16,180] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:50:16,181] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:50:16,181] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:50:45,680] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:50:45,681] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:50:45,681] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:50:45,701] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:50:46,047] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:50:46,049] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:50:46,049] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:50:46,049] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:50:46,050] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:50:46,051] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:50:46,052] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:50:46,052] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:50:46,052] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:50:46,052] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:50:46,054] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 01:54:03,246] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:54:03,395] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-10-12 01:54:03,398] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 01:54:03,401] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 01:54:03,413] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 01:54:03,416] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 01:54:03,431] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 106) (kafka.controller.KafkaController)
[2023-10-12 01:54:03,631] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:54:03,653] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 01:54:03,662] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:54:03,663] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 01:54:03,663] INFO [Controller id=0] Current list of topics in the cluster: HashSet(3-moveSignal, 2-positionUpdate, 1-positionUpdate, 2-destination, 2-moveSignal, 1-destination, boardUpdates, 1-moveSignal, 3-positionUpdate, 3-destination) (kafka.controller.KafkaController)
[2023-10-12 01:54:03,663] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 01:54:03,672] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,672] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,673] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 01:54:03,673] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 01:54:03,675] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 01:54:03,675] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 01:54:03,713] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:54:03,720] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:54:03,742] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:54:03,742] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=2-positionUpdate,Partition=0,Replica=0] -> OnlineReplica, [Topic=2-destination,Partition=0,Replica=0] -> OnlineReplica, [Topic=3-destination,Partition=0,Replica=0] -> OnlineReplica, [Topic=2-moveSignal,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-destination,Partition=0,Replica=0] -> OnlineReplica, [Topic=3-positionUpdate,Partition=0,Replica=0] -> OnlineReplica, [Topic=3-moveSignal,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-positionUpdate,Partition=0,Replica=0] -> OnlineReplica, [Topic=boardUpdates,Partition=0,Replica=0] -> OnlineReplica, [Topic=1-moveSignal,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:54:03,743] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:54:03,760] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:54:03,776] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(2-positionUpdate-0 -> OnlinePartition, 1-positionUpdate-0 -> OnlinePartition, 2-destination-0 -> OnlinePartition, 2-moveSignal-0 -> OnlinePartition, 1-destination-0 -> OnlinePartition, 3-moveSignal-0 -> OnlinePartition, boardUpdates-0 -> OnlinePartition, 1-moveSignal-0 -> OnlinePartition, 3-positionUpdate-0 -> OnlinePartition, 3-destination-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:54:03,777] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-10-12 01:54:03,786] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,786] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,787] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,787] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 01:54:03,788] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 01:54:03,822] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 01:54:04,235] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 01:54:08,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 01:54:08,831] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 01:54:08,835] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 01:54:08,836] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 01:56:39,812] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 01:56:39,812] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 01:56:39,813] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 01:56:39,819] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 01:56:40,005] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:56:40,005] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:56:40,005] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 01:56:40,005] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 01:56:40,006] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 01:56:40,006] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 01:56:40,007] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 01:56:40,007] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 01:56:40,007] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 01:56:40,008] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 01:56:40,009] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 02:03:52,947] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 02:03:53,027] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 02:03:53,037] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 02:03:53,394] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 02:03:53,399] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 02:03:53,401] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 02:03:53,404] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 02:03:53,418] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 02:03:53,423] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 02:03:53,524] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 02:03:53,534] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 02:03:53,534] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 02:03:53,534] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 02:03:53,534] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 02:03:53,538] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,538] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,538] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 02:03:53,539] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 02:03:53,586] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 02:03:53,591] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 02:03:53,611] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:03:53,611] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:03:53,613] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:03:53,614] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:03:53,614] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:03:53,614] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:03:53,616] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:03:53,616] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 02:03:53,629] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 02:03:53,659] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,659] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,659] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,659] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 02:03:53,661] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 02:03:53,677] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 02:03:58,684] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:03:58,685] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:04:02,159] INFO [Controller id=0] New topics: [Set(3-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(T50BswzjR_OxLJ4E7qAk-A),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,159] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,285] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(aUTgh-5OSper7Onc0tn0xA),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,285] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,324] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(2CADoLezQr2X2OAP2zgy-A),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,324] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,360] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(xMD85avAQkyPbQXYmuj5kg),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,360] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,389] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(1K4avBC4TYeId9DmcecHow),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,389] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,471] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(KWAubmm0Tk-8R2dBTTz3YA),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,471] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,495] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(gebEeZNkRoCpfsAt-usx5A),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,495] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,524] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(bCVpyquKSniEufJVMQbVQw),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,524] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,567] INFO [Controller id=0] New topics: [HashSet(3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(K11chPxGS1uHxukR4H0ZNg),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,567] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 02:04:02,611] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(PFRN77FKSMaFZQUKPrymFg),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 02:04:02,612] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 02:07:56,949] DEBUG [Controller id=0] Delete topics listener fired for topics 1-destination to be deleted (kafka.controller.KafkaController)
[2023-10-12 02:07:56,950] INFO [Controller id=0] Starting topic deletion for topics 1-destination (kafka.controller.KafkaController)
[2023-10-12 02:07:56,952] INFO [Topic Deletion Manager 0] Handling deletion for topics 1-destination (kafka.controller.TopicDeletionManager)
[2023-10-12 02:07:56,952] INFO [Topic Deletion Manager 0] Deletion of topic 1-destination (re)started (kafka.controller.TopicDeletionManager)
[2023-10-12 02:07:57,069] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(1-destination-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2023-10-12 02:07:57,070] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=1-destination,Partition=0,Replica=0]. Halting deletion for topics Set(1-destination) (kafka.controller.TopicDeletionManager)
[2023-10-12 02:07:57,072] INFO [Topic Deletion Manager 0] Halted deletion of topics 1-destination due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2023-10-12 02:07:57,072] INFO [Topic Deletion Manager 0] Handling deletion for topics 1-destination (kafka.controller.TopicDeletionManager)
[2023-10-12 02:07:57,074] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics 1-destination since replicas [Topic=1-destination,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2023-10-12 02:08:45,017] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 02:08:45,073] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 02:08:45,077] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 02:08:45,157] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 02:08:45,161] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 02:08:45,164] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 02:08:45,173] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 02:08:45,187] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 02:08:45,216] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 02:08:45,224] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 02:08:45,236] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 02:08:45,237] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 02:08:45,237] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 02:08:45,237] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 02:08:45,252] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,252] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,252] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 02:08:45,253] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 02:08:45,349] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 02:08:45,355] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 02:08:45,367] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:08:45,368] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:08:45,494] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:08:45,495] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 02:08:45,497] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:08:45,497] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:08:45,503] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 02:08:45,503] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 02:08:45,513] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,514] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,514] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,514] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 02:08:45,516] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 02:08:45,529] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 02:08:45,888] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 02:08:50,538] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:08:50,539] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:13:50,550] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:13:50,550] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:18:50,564] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:18:50,564] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:23:50,574] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:23:50,574] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:28:50,576] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:28:50,576] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:33:50,578] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:33:50,578] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:38:50,579] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:38:50,579] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:43:50,590] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:43:50,590] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:48:50,602] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:48:50,602] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:53:50,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:53:50,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 02:58:50,623] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 02:58:50,623] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:03:50,629] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:03:50,634] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:08:50,644] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:08:50,644] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:13:50,652] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:13:50,652] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:18:50,668] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:18:50,668] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:23:42,502] INFO [Controller id=0] New topics: [Set(3-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(QuuCzuRISYygqACOSPDhMg),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,512] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,599] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(I-fkwx8ZRvOKQ2vD3rrsRQ),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,600] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,625] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(U48XKnMmRBuRIm8krU0EUw),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,625] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,660] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(hDAUoXTEQ5esKGjVnRaU_A),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,660] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,680] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 03:23:42,805] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(VyfXOA8QRwiruhtxHA1FAQ),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,805] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,826] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(HDzAK1enQ6mgygNjU_ljIQ),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,826] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,886] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(E9vNxMbqTYql3wHQN8Ds0A),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,886] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,930] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(HACT3LXjRTWitNeVmycMsQ),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,930] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,951] INFO [Controller id=0] New topics: [HashSet(3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(W-djpG3SSvyUdNkNb4vi_g),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,952] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:42,979] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(PhGFD-ZlQ3ay9iCdwLrRtg),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 03:23:42,979] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 03:23:50,672] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:23:50,672] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:23:50,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:23:50,677] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:28:50,685] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:28:50,685] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:28:50,686] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:28:50,686] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:33:50,691] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:33:50,691] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:33:50,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:33:50,692] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:38:50,702] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:38:50,702] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:38:50,702] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:38:50,702] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:43:50,704] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:43:50,704] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:43:50,705] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:43:50,705] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:48:50,716] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:48:50,716] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:48:50,717] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:48:50,717] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:53:50,732] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:53:50,732] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:53:50,733] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:53:50,733] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 03:58:50,744] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 03:58:50,744] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 03:58:50,745] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 03:58:50,745] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:03:50,746] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:03:50,748] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:03:50,748] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:03:50,748] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:08:50,761] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:08:50,761] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:08:50,761] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:08:50,762] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:11:22,890] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 04:11:22,891] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 04:11:22,891] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 04:11:22,896] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 04:11:23,233] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:11:23,233] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:11:23,233] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:11:23,233] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 04:11:23,234] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:11:23,235] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:11:23,236] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:11:23,236] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 04:11:23,236] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 04:11:23,237] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 04:11:23,237] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 04:11:42,311] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:11:42,399] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 04:11:42,404] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 04:11:42,452] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 04:11:42,456] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 04:11:42,460] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 04:11:42,462] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 04:11:42,484] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 04:11:42,648] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:11:42,662] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 04:11:42,676] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:11:42,676] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:11:42,676] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:11:42,676] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 04:11:42,682] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,682] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,682] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 04:11:42,683] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 04:11:42,808] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 04:11:42,814] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 04:11:42,823] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:11:42,823] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:11:42,832] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:11:42,832] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:11:42,832] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:11:42,833] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:11:42,835] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:11:42,836] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 04:11:42,846] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,846] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,846] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,847] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 04:11:42,850] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 04:11:42,866] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 04:11:43,329] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 04:11:47,871] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:11:47,871] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:16:47,885] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:16:47,885] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:21:47,890] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:21:47,890] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:26:23,543] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(ObWI_RRPRbe7SXUpwVeXkw),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:23,544] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:23,629] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 04:26:23,634] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(D9DpJQfgRfirmh9h-R4iOw),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:23,635] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:23,764] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(mJ-ml0TvRwOsVJxpfAr7Og),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:23,766] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:23,845] INFO [Controller id=0] New topics: [Set(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(Zy9ekH73QiGWiFtA8s7KbA),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:23,846] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:23,888] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(GIyHC7P-Q4SMEoudwMGFqA),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:23,888] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:24,006] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(prQ3imKJQdG04yIz5OFHbw),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:24,007] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:24,065] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(pndclER8Sxq0Uo8qY0FCng),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:26:24,065] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:26:47,904] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:26:47,904] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:26:47,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:26:47,907] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:28:44,323] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 04:28:44,323] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 04:28:44,323] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 04:28:44,326] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 04:28:44,613] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:28:44,613] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:28:44,613] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:28:44,614] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 04:28:44,614] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:28:44,615] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:28:44,615] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:28:44,616] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 04:28:44,616] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 04:28:44,616] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 04:28:44,617] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 04:29:08,901] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:29:08,936] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 04:29:08,943] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 04:29:09,002] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 04:29:09,005] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 04:29:09,008] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 04:29:09,010] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 04:29:09,023] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 04:29:09,027] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:29:09,036] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 04:29:09,047] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:29:09,048] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:29:09,048] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:29:09,048] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 04:29:09,063] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,063] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,064] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 04:29:09,064] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 04:29:09,287] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 04:29:09,297] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 04:29:09,389] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:29:09,390] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:29:09,394] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:29:09,394] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:29:09,394] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:29:09,394] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:29:09,397] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:29:09,397] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 04:29:09,691] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,691] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,691] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,692] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 04:29:09,693] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 04:29:09,705] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 04:29:09,841] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 04:29:14,711] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:29:14,711] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:30:18,078] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(eM9CIRU5S4OqfdzJ1KmRig),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,079] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,191] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(ySQT3AxxRMyt_UW_00m7KQ),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,191] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,281] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(tHjkTZL2Q2yTLZh7NxPFkw),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,281] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,397] INFO [Controller id=0] New topics: [Set(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(D0xM1ZpGR5KrNaf0F2JBOw),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,397] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,469] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(7IIGVT1rRrqnPFOJlN_uog),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,469] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,586] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(PdMeRWZWSg2Cmz_Gu8S7GQ),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,586] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 04:30:18,607] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(xIiJvs5xSI62-0cY8yKi3Q),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:30:18,607] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:14,724] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:34:14,724] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:34:14,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:34:14,728] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:34:15,782] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 04:34:15,782] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 04:34:15,782] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 04:34:15,788] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 04:34:15,974] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:34:15,974] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:34:15,974] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:34:15,975] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 04:34:15,975] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:34:15,976] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:34:15,976] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:34:15,977] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 04:34:15,977] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 04:34:15,977] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 04:34:15,978] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 04:34:37,478] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 04:34:37,511] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 04:34:37,514] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 04:34:37,562] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 04:34:37,570] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 04:34:37,572] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 04:34:37,575] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 04:34:37,603] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 04:34:37,616] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:34:37,650] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 04:34:37,692] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 04:34:37,692] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:34:37,692] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 04:34:37,693] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 04:34:37,697] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 04:34:37,698] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:34:37,698] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 04:34:37,699] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 04:34:37,892] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 04:34:37,907] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 04:34:37,986] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:34:37,987] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:34:37,998] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:34:37,998] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 04:34:37,998] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:34:37,999] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:34:38,003] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 04:34:38,003] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 04:34:38,016] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:34:38,016] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 04:34:38,017] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 04:34:38,017] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 04:34:38,017] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 04:34:38,031] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 04:34:38,503] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 04:34:43,038] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:34:43,039] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:34:51,284] INFO [Controller id=0] New topics: [Set(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(UyrPp3JlS4qGRZAiQgrGkQ),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,285] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,372] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(4qGEqMmqSOiDZhnOwmam6Q),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,372] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,445] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(c02McomQR7qt5mtHTRWNFw),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,446] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,478] INFO [Controller id=0] New topics: [Set(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(E4rrv9h_ROKgQ2Efp5s1Nw),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,479] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,510] INFO [Controller id=0] New topics: [HashSet(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(f_rJUl5vT3Cf7JgcK3E7bg),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,510] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,625] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(QynhmtvqRZGq7__kNPC9og),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,625] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 04:34:51,738] INFO [Controller id=0] New topics: [HashSet(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(_7xY5144Rtmgt4Dhl8AZdw),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 04:34:51,739] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 04:39:43,055] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:39:43,055] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:39:43,057] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:39:43,058] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:44:43,071] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:44:43,071] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:44:43,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:44:43,072] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:49:43,086] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:49:43,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:49:43,087] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:49:43,087] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:54:43,093] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:54:43,093] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:54:43,094] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:54:43,094] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 04:59:43,106] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 04:59:43,106] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 04:59:43,106] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 04:59:43,106] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:00:44,325] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(r7zv-l73TtSkaS8OnSR8kg),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:00:44,332] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 05:00:44,368] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 05:00:44,490] INFO [Controller id=0] New topics: [HashSet(3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(YwDJFbOdSFa1gPRfwUbOcw),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:00:44,490] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 05:00:44,582] INFO [Controller id=0] New topics: [HashSet(3-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(9xMIHO2tQkWk-VxHiuVShQ),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:00:44,582] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 05:02:17,026] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-12 05:02:17,027] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-12 05:02:17,027] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-12 05:02:17,033] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),3-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-12 05:02:17,269] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 05:02:17,269] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 05:02:17,269] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 05:02:17,269] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-12 05:02:17,270] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 05:02:17,271] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 05:02:17,272] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 05:02:17,272] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-12 05:02:17,272] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-12 05:02:17,272] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-12 05:02:17,274] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-12 05:02:36,021] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 05:02:36,059] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 05:02:36,072] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 05:02:36,114] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 05:02:36,121] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 05:02:36,123] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 05:02:36,129] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 05:02:36,152] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 05:02:36,163] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 05:02:36,193] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 05:02:36,213] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 05:02:36,213] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 05:02:36,215] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 05:02:36,216] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 05:02:36,242] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,243] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,243] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 05:02:36,243] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 05:02:36,338] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 05:02:36,453] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 05:02:36,535] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 05:02:36,540] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 05:02:36,568] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 05:02:36,571] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 05:02:36,574] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 05:02:36,584] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 05:02:36,613] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 05:02:36,615] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 05:02:36,621] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,621] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,622] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,622] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 05:02:36,623] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 05:02:36,649] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 05:02:37,036] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 05:02:41,665] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:02:41,666] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:07:41,675] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:07:41,676] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:12:41,685] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:12:41,685] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:17:41,695] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:17:41,695] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:22:41,698] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:22:41,698] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:23:40,937] INFO [Controller id=0] New topics: [Set(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(SZ50WYrzStmGpRtkt1j7dQ),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:40,938] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:40,995] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 05:23:41,324] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(SNeP3xZyTYCYePL4DlV1Zg),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,324] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:41,429] INFO [Controller id=0] New topics: [Set(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(t56L6qrET22Afdmpwky3tw),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,429] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:41,582] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(cywIOU66Q0yEYFf5iZ5v4Q),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,582] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:41,645] INFO [Controller id=0] New topics: [HashSet(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(5VFyHpaVRqi9vDqe35NklQ),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,646] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:41,723] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(STT66COdQMu7Bc9HQsgpZg),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,723] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 05:23:41,779] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(eR1LitoQQ_msWXOAy6tyiQ),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:23:41,779] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 05:27:41,706] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:27:41,706] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:27:41,708] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:27:41,709] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:32:41,721] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:32:41,721] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:32:41,722] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:32:41,722] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:32:45,081] INFO [Controller id=0] New topics: [HashSet(3-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-destination,Some(ny8UJ73YR3KLa3s4D0AuGg),Map(3-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:32:45,081] INFO [Controller id=0] New partition creation callback for 3-destination-0 (kafka.controller.KafkaController)
[2023-10-12 05:32:45,160] INFO [Controller id=0] New topics: [HashSet(3-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-positionUpdate,Some(GYeORe_iS_--kSS-WWueuw),Map(3-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:32:45,161] INFO [Controller id=0] New partition creation callback for 3-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 05:32:45,286] INFO [Controller id=0] New topics: [HashSet(3-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(3-moveSignal,Some(GSgwXuZ6Q9WDdV8UWkmGOQ),Map(3-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:32:45,286] INFO [Controller id=0] New partition creation callback for 3-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 05:37:08,400] INFO [Controller id=0] New topics: [HashSet(4-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(4-destination,Some(e9cePdgPQ4Gwz3zP42aowg),Map(4-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:37:08,400] INFO [Controller id=0] New partition creation callback for 4-destination-0 (kafka.controller.KafkaController)
[2023-10-12 05:37:08,490] INFO [Controller id=0] New topics: [HashSet(4-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(4-positionUpdate,Some(sml4CJIARyGfFnhUlwZZyA),Map(4-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:37:08,490] INFO [Controller id=0] New partition creation callback for 4-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 05:37:08,632] INFO [Controller id=0] New topics: [HashSet(4-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(4-moveSignal,Some(FOLOXoG0R0q7qptrd8DrpA),Map(4-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 05:37:08,632] INFO [Controller id=0] New partition creation callback for 4-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 05:37:41,729] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:37:41,729] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:37:41,729] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:37:41,729] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:42:41,730] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:42:41,730] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:42:41,731] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:42:41,731] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:47:41,747] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:47:41,747] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:47:41,748] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:47:41,748] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:52:41,762] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:52:41,762] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:52:41,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:52:41,763] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 05:57:41,763] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 05:57:41,763] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 05:57:41,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 05:57:41,763] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:24:35,784] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-12 18:24:35,894] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-12 18:24:35,900] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-12 18:24:36,067] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-12 18:24:36,071] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-12 18:24:36,073] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-12 18:24:36,076] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-12 18:24:36,088] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-12 18:24:36,097] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-12 18:24:36,104] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-12 18:24:36,117] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-12 18:24:36,117] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 18:24:36,118] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-12 18:24:36,118] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-12 18:24:36,132] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,133] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,133] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-12 18:24:36,133] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-12 18:24:36,269] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-12 18:24:36,282] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-12 18:24:36,504] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 18:24:36,505] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 18:24:36,515] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 18:24:36,515] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-12 18:24:36,516] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 18:24:36,516] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 18:24:36,520] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-12 18:24:36,521] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-12 18:24:36,529] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,529] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,530] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,530] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-12 18:24:36,532] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-12 18:24:36,546] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-12 18:24:37,075] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-12 18:24:41,560] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:24:41,561] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:25:56,471] INFO [Controller id=0] New topics: [Set(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(ZApsvajKScmkpd_aYFUdLg),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:56,472] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:56,809] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(hYezFL1RSnSWKtcbPJylDA),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:56,809] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:56,963] INFO [Controller id=0] New topics: [Set(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(8O2DYtepS_alDG6kBQRqbA),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:56,963] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:57,248] INFO [Controller id=0] New topics: [Set(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(2FJm5omTSHqIyzWIcyIYBA),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:57,248] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:57,349] INFO [Controller id=0] New topics: [HashSet(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(dHGG5nZnQCSc_5ZYDsWYSw),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:57,349] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:57,717] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(EynLgqX4Qbi0tFkO6rzj3Q),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:57,717] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:57,818] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(eSHGCaoxSLG07BKH2xaeyA),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:57,818] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-12 18:25:58,148] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(FuMHlONFTSuCSmSnga6TWw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-12 18:25:58,151] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-12 18:27:06,623] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-12 18:27:06,630] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-12 18:29:41,568] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:29:41,568] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:29:41,576] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:29:41,578] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:34:41,596] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:34:41,596] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:34:41,599] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:34:41,599] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:39:41,604] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:39:41,605] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:39:41,616] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:39:41,618] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:44:41,627] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:44:41,629] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:44:41,636] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:44:41,637] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:49:41,652] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:49:41,655] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:49:41,663] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:49:41,665] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:54:41,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:54:41,684] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:54:41,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:54:41,692] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 18:59:41,706] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 18:59:41,706] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 18:59:41,707] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 18:59:41,707] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:04:41,713] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:04:41,742] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:04:41,745] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:04:41,745] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:09:41,756] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:09:41,756] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:09:41,757] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:09:41,757] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:14:41,766] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:14:41,766] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:14:41,767] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:14:41,767] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:19:41,781] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:19:41,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:19:41,782] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:19:41,782] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:24:41,783] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:24:41,783] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:24:41,784] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:24:41,784] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:29:41,793] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:29:41,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:29:41,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:29:41,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:34:41,796] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:34:41,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:34:41,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:34:41,797] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:39:41,805] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:39:41,805] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:39:41,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:39:41,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:44:41,808] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:44:41,808] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:44:41,809] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:44:41,809] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:49:41,817] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:49:41,817] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:49:41,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:49:41,817] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:54:41,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:54:41,830] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:54:41,830] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:54:41,831] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 19:59:41,838] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 19:59:41,838] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 19:59:41,839] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 19:59:41,839] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:04:41,849] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:04:41,853] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:04:41,854] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:04:41,854] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:09:41,863] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:09:41,863] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:09:41,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:09:41,864] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:14:41,877] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:14:41,877] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:14:41,878] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:14:41,878] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:19:41,894] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:19:41,894] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:19:41,894] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:19:41,895] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:24:41,904] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:24:41,904] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:24:41,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:24:41,905] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:29:41,908] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:29:41,908] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:29:41,909] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:29:41,909] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:34:41,924] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:34:41,924] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:34:41,925] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:34:41,925] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:39:41,934] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:39:41,934] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:39:41,935] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:39:41,935] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:44:41,950] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:44:41,950] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:44:41,951] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:44:41,951] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:49:41,952] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:49:41,952] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:49:41,953] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:49:41,953] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:54:41,957] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:54:41,957] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:54:41,958] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:54:41,958] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 20:59:41,968] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 20:59:41,968] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 20:59:41,971] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 20:59:41,971] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:04:41,985] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:04:41,991] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:04:41,992] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:04:41,992] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:09:42,005] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:09:42,008] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:09:42,008] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:09:42,009] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:14:42,016] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:14:42,016] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:14:42,016] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:14:42,018] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:19:42,029] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:19:42,029] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:19:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:19:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:24:42,041] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:24:42,041] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:24:42,041] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:24:42,041] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:29:42,047] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:29:42,047] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:29:42,048] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:29:42,048] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:34:42,051] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:34:42,051] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:34:42,052] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:34:42,052] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:39:42,054] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:39:42,054] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:39:42,055] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:39:42,055] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:44:42,059] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:44:42,059] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:44:42,060] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:44:42,060] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:49:42,069] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:49:42,069] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:49:42,070] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:49:42,070] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:54:42,071] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:54:42,071] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:54:42,072] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:54:42,072] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 21:59:42,086] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 21:59:42,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 21:59:42,086] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 21:59:42,087] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:04:42,101] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:04:42,102] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:04:42,103] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:04:42,103] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:09:42,119] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:09:42,119] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:09:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:09:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:14:42,133] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:14:42,133] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:14:42,133] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:14:42,134] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:19:42,149] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:19:42,149] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:19:42,149] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:19:42,149] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:24:42,154] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:24:42,154] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:24:42,155] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:24:42,155] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:29:42,157] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:29:42,157] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:29:42,157] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:29:42,157] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:34:42,158] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:34:42,158] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:34:42,159] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:34:42,159] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:39:42,166] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:39:42,166] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:39:42,167] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:39:42,167] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:44:42,182] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:44:42,182] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:44:42,183] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:44:42,183] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:49:42,191] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:49:42,191] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:49:42,192] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:49:42,192] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:54:42,197] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:54:42,197] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:54:42,198] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:54:42,198] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 22:59:42,200] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 22:59:42,200] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 22:59:42,201] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 22:59:42,201] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-12 23:04:42,207] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-12 23:04:42,222] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-12 23:04:42,223] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-12 23:04:42,223] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:06:26,481] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:06:26,508] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:06:26,524] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:06:26,524] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:11:26,530] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:11:26,530] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:11:26,530] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:11:26,530] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:16:26,544] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:16:26,544] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:16:26,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:16:26,562] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:21:26,618] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:21:26,618] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:21:26,619] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:21:26,619] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:26:19,784] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:26:19,784] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:26:19,785] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:26:19,785] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:31:32,380] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:31:32,380] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:31:32,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:31:32,391] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:36:26,517] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:36:26,517] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:36:26,518] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:36:26,518] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:41:26,533] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:41:26,533] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:41:26,545] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:41:26,545] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:46:26,545] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:46:26,546] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:46:26,547] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:46:26,547] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:51:26,559] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:51:26,559] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:51:26,560] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:51:26,560] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 20:56:26,569] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 20:56:26,569] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 20:56:26,582] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 20:56:26,582] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:01:26,584] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:01:26,627] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:01:26,630] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:01:26,630] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:06:26,640] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:06:26,640] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:06:26,641] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:06:26,641] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:11:26,657] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:11:26,657] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:11:26,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:11:26,657] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:16:26,672] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:16:26,672] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:16:26,672] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:16:26,672] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:21:26,677] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:21:26,677] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:21:26,677] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:21:26,678] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:26:26,679] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:26:26,679] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:26:26,679] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:26:26,680] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:31:26,684] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:31:26,684] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:31:26,696] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:31:26,697] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:36:26,698] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:36:26,698] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:36:26,698] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:36:26,698] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:41:26,699] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:41:26,699] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:41:26,699] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:41:26,699] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:46:26,713] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:46:26,713] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:46:26,714] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:46:26,714] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:51:26,714] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:51:26,714] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:51:26,714] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:51:26,714] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 21:56:26,723] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 21:56:26,723] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 21:56:26,724] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 21:56:26,724] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:01:26,729] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:01:26,735] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:01:26,737] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:01:26,737] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:06:26,750] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:06:26,750] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:06:26,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:06:26,750] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:11:26,752] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:11:26,752] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:11:26,752] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:11:26,752] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:16:26,772] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:16:26,773] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:16:26,773] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:16:26,773] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:21:26,781] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:21:26,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:21:26,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:21:26,781] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:26:26,798] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:26:26,798] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:26:26,798] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:26:26,798] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:31:26,802] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:31:26,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:31:26,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:31:26,802] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:36:26,806] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:36:26,806] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:36:26,807] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:36:26,807] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:41:26,820] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:41:26,820] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:41:26,820] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:41:26,820] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:46:26,826] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:46:26,826] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:46:26,826] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:46:26,826] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:51:26,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:51:26,830] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:51:26,830] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:51:26,830] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 22:56:26,846] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 22:56:26,846] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 22:56:26,846] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 22:56:26,846] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:01:26,859] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:01:26,877] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:01:26,877] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:01:26,877] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:06:26,885] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:06:26,885] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:06:26,886] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:06:26,886] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:11:26,888] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:11:26,888] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:11:26,890] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:11:26,890] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:16:26,901] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:16:26,901] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:16:26,914] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:16:26,914] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:21:26,930] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:21:26,930] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:21:26,930] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:21:26,930] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:26:26,937] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:26:26,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:26:26,963] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:26:26,963] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:31:26,966] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:31:26,966] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:31:26,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:31:26,967] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:36:26,978] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:36:26,979] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:36:26,980] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:36:26,980] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:41:26,989] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:41:26,989] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:41:26,990] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:41:26,990] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:46:27,005] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:46:27,005] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:46:27,006] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:46:27,006] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:51:27,013] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:51:27,013] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:51:27,013] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:51:27,013] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-18 23:56:27,019] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-18 23:56:27,019] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-18 23:56:27,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-18 23:56:27,020] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:01:27,025] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:01:27,042] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:01:27,042] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:01:27,042] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:06:27,045] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:06:27,045] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:06:27,045] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:06:27,045] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:11:27,061] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:11:27,061] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:11:27,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:11:27,074] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:16:27,084] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:16:27,084] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:16:27,084] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:16:27,084] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:21:27,099] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:21:27,099] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:21:27,099] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:21:27,099] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:26:27,109] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:26:27,109] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:26:27,109] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:26:27,109] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:31:27,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:31:27,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:31:27,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:31:27,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:36:27,123] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:36:27,123] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:36:27,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:36:27,123] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:41:27,130] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:41:27,130] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:41:27,130] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:41:27,130] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:46:27,141] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:46:27,141] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:46:27,141] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:46:27,141] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:51:27,148] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:51:27,148] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:51:27,149] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:51:27,149] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 00:56:27,156] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 00:56:27,156] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 00:56:27,156] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 00:56:27,156] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:01:27,161] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:01:27,165] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:01:27,176] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:01:27,176] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:06:27,181] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:06:27,181] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:06:27,182] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:06:27,182] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:11:27,184] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:11:27,184] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:11:27,184] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:11:27,184] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:16:27,200] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:16:27,200] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:16:27,200] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:16:27,201] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:21:27,202] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:21:27,202] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:21:27,202] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:21:27,202] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:26:27,212] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:26:27,212] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:26:27,212] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:26:27,212] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:31:27,228] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:31:27,228] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:31:27,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:31:27,228] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:36:27,238] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:36:27,238] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:36:27,238] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:36:27,238] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:41:27,247] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:41:27,247] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:41:27,247] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:41:27,247] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:46:27,255] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:46:27,255] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:46:27,255] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:46:27,255] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:51:27,261] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:51:27,261] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:51:27,261] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:51:27,261] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 01:56:27,267] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 01:56:27,267] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 01:56:27,267] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 01:56:27,267] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:01:27,272] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:01:27,274] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:01:27,275] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:01:27,275] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:06:27,281] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:06:27,281] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:06:27,281] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:06:27,281] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:11:27,289] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:11:27,289] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:11:27,289] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:11:27,289] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:16:27,299] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:16:27,299] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:16:27,299] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:16:27,299] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:21:27,308] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:21:27,308] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:21:27,308] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:21:27,308] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:26:27,320] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:26:27,320] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:26:27,321] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:26:27,321] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:31:27,334] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:31:27,334] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:31:27,346] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:31:27,346] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:36:27,362] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:36:27,362] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:36:27,362] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:36:27,362] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:41:27,369] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:41:27,369] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:41:27,369] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:41:27,369] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:46:27,373] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:46:27,373] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:46:27,374] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:46:27,374] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:51:27,388] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:51:27,388] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:51:27,388] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:51:27,388] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 02:56:27,393] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 02:56:27,393] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 02:56:27,393] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 02:56:27,393] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:01:27,396] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:01:27,414] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:01:27,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:01:27,415] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:06:27,428] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:06:27,428] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:06:27,429] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:06:27,429] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:11:27,438] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:11:27,438] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:11:27,439] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:11:27,439] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:16:27,441] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:16:27,441] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:16:27,441] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:16:27,442] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:21:27,455] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:21:27,455] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:21:27,470] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:21:27,470] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:26:27,485] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:26:27,485] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:26:27,497] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:26:27,497] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:31:27,513] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:31:27,513] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:31:27,514] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:31:27,514] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:36:27,527] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:36:27,528] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:36:27,528] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:36:27,528] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:41:27,543] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:41:27,543] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:41:27,543] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:41:27,543] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:46:27,548] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:46:27,548] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:46:27,549] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:46:27,549] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:51:27,550] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:51:27,550] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:51:27,550] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:51:27,551] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 03:56:27,559] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 03:56:27,559] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 03:56:27,559] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 03:56:27,559] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 04:01:27,560] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 04:01:27,564] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 04:01:27,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 04:01:27,565] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 04:06:27,575] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 04:06:27,575] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 04:06:27,576] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 04:06:27,576] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 04:11:27,588] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 04:11:27,588] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 04:11:27,588] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 04:11:27,590] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 04:16:27,598] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 04:16:27,598] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 04:16:27,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 04:16:27,598] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:06:18,708] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:06:18,710] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:06:18,711] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:06:18,711] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:11:18,727] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:11:18,727] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:11:18,729] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:11:18,729] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:16:18,737] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:16:18,737] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:16:18,737] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:16:18,737] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:21:18,744] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:21:18,744] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:21:18,773] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:21:18,773] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:26:18,774] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:26:18,774] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:26:18,774] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:26:18,774] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:31:18,776] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:31:18,776] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:31:18,776] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:31:18,776] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:36:18,787] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:36:18,787] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:36:18,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 10:36:18,802] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 10:38:37,770] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 10:38:37,773] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 10:38:37,777] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 10:38:37,880] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 10:38:38,939] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 10:38:38,939] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 10:38:38,939] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 10:38:38,939] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 10:38:38,941] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 10:38:38,943] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 10:38:38,945] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 10:38:38,949] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 10:38:38,949] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 10:38:38,949] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 10:38:38,952] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 10:39:24,374] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 10:39:24,427] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 10:39:24,432] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 10:39:24,467] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 10:39:24,482] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 10:39:24,486] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 10:39:24,488] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 10:39:24,503] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 10:39:24,542] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 10:39:24,587] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 10:39:24,611] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 10:39:24,612] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 10:39:24,612] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 10:39:24,613] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 10:39:24,711] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 10:39:24,819] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,820] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,820] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 10:39:24,821] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 10:39:24,827] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 10:39:24,839] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 10:39:24,839] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 10:39:24,851] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 10:39:24,852] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 10:39:24,852] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 10:39:24,852] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 10:39:24,871] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 10:39:24,871] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 10:39:24,902] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,902] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,902] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,903] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 10:39:24,903] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 10:39:24,917] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 10:39:25,361] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 10:39:29,926] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:39:29,927] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:44:29,938] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 10:44:29,938] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 10:45:26,266] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(ixZOWNU2S_WHFvqL-uiq8w),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 10:45:26,268] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 18:10:22,055] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:10:22,057] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:10:22,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:10:22,060] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:15:21,819] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:15:21,819] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:15:21,819] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:15:21,819] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:20:21,835] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:20:21,835] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:20:21,835] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:20:21,835] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:25:21,849] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:25:21,849] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:25:21,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:25:21,849] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:30:21,856] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:30:21,856] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:30:21,857] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:30:21,857] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:35:21,863] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:35:21,863] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:35:21,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:35:21,863] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:40:21,867] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:40:21,867] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:40:21,867] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:40:21,867] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:45:21,882] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:45:21,882] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:45:21,882] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:45:21,882] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:50:21,888] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:50:21,888] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:50:21,888] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:50:21,888] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 18:55:21,902] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 18:55:21,903] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 18:55:21,903] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 18:55:21,903] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:00:21,916] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:00:21,918] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:00:21,918] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 19:00:21,920] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:04:37,720] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 19:04:37,763] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 19:05:21,940] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:05:21,940] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:05:21,940] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 19:05:21,940] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:10:21,954] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:10:21,954] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:10:21,954] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 19:10:21,954] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:14:37,903] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(LE3F1fAjROupRC2q8CEhhA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 19:14:37,904] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 19:14:38,116] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 19:15:21,955] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:15:21,955] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:15:21,957] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:15:21,957] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:20:21,970] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:20:21,970] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:20:21,971] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:20:21,971] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:25:21,985] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:25:21,985] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:25:21,986] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:25:21,986] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:30:21,995] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:30:21,995] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:30:21,996] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:30:21,996] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:35:22,002] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:35:22,002] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:35:22,002] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:35:22,002] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:40:22,031] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:40:22,031] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:40:22,031] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:40:22,031] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:45:22,049] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:45:22,049] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:45:22,050] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:45:22,050] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:46:34,371] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 19:46:34,373] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 19:46:34,373] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 19:46:34,381] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 19:46:35,172] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:46:35,173] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:46:35,174] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:46:35,174] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 19:46:35,176] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:46:35,178] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:46:35,183] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:46:35,185] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 19:46:35,186] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 19:46:35,188] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 19:46:35,192] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 19:47:05,891] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:47:05,954] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 19:47:05,959] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 19:47:06,014] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 19:47:06,024] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 19:47:06,028] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 19:47:06,034] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 19:47:06,057] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 19:47:06,063] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:47:06,083] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 19:47:06,198] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:47:06,198] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:47:06,198] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:47:06,198] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 19:47:06,375] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,376] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,376] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 19:47:06,417] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 19:47:06,485] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 19:47:06,487] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 19:47:06,542] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:47:06,545] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:47:06,556] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:47:06,556] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:47:06,557] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:47:06,557] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:47:06,561] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:47:06,561] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 19:47:06,568] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,569] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,569] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,569] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 19:47:06,571] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 19:47:06,582] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 19:47:07,046] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 19:47:11,594] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:47:11,594] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:50:24,253] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(tO5T-XnsSi2vKYfhJxHifQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 19:50:24,255] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 19:50:24,522] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(mukOj3xzSP-QzcRWJTbnVg),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 19:50:24,523] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 19:50:42,382] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 19:50:42,386] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 19:52:11,600] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:52:11,600] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:52:11,603] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 19:52:11,604] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 19:55:26,760] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 19:55:26,760] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 19:55:26,760] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 19:55:26,766] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 19:55:27,302] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:55:27,302] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:55:27,302] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:55:27,302] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 19:55:27,302] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:55:27,306] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:55:27,306] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:55:27,307] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 19:55:27,307] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 19:55:27,307] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 19:55:27,316] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 19:55:59,056] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:55:59,107] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 19:55:59,111] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 19:55:59,165] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 19:55:59,174] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 19:55:59,180] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 19:55:59,196] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 19:55:59,244] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 19:55:59,268] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:55:59,563] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 19:55:59,574] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:55:59,575] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:55:59,575] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:55:59,575] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 19:55:59,579] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,579] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,579] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 19:55:59,580] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 19:55:59,618] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 19:55:59,619] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 19:55:59,631] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:55:59,631] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:55:59,637] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:55:59,637] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:55:59,638] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:55:59,638] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:55:59,642] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 19:55:59,668] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:55:59,668] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 19:55:59,676] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,676] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,676] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,676] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 19:55:59,679] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 19:55:59,691] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 19:56:04,700] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:56:04,701] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 19:56:04,937] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(6pPuC5zHQnmpmkFwinlYLA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 19:56:04,937] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 19:56:05,151] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(R2TeIWRgRTCKnu5tne2vfQ),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 19:56:05,151] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 19:57:09,718] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 19:57:09,722] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 19:59:14,860] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 19:59:14,860] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 19:59:14,860] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 19:59:14,865] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 19:59:15,456] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:59:15,456] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:59:15,457] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:59:15,457] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 19:59:15,457] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:59:15,458] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:59:15,458] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:59:15,459] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 19:59:15,460] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 19:59:15,461] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 19:59:15,462] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 19:59:35,827] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 19:59:35,869] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 19:59:35,876] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 19:59:35,987] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 19:59:36,018] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 19:59:36,035] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 19:59:36,039] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 19:59:36,058] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 19:59:36,065] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:59:36,084] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 19:59:36,339] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 19:59:36,339] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:59:36,339] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 19:59:36,340] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 19:59:36,351] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,351] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,351] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 19:59:36,352] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 19:59:36,363] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 19:59:36,372] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 19:59:36,382] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:59:36,383] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:59:36,394] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 19:59:36,412] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:59:36,412] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 19:59:36,412] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:59:36,413] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:59:36,417] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 19:59:36,417] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 19:59:36,425] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,425] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,425] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,427] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 19:59:36,429] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 19:59:36,444] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 19:59:41,454] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 19:59:41,456] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:04:41,470] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:04:41,471] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:05:45,949] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(cCnRQY4UT0yYqYPMLq_nhA),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:05:45,956] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 20:05:46,416] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(FnVZH7hdS-yzm2-jjIUbUQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:05:46,417] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 20:09:41,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:09:41,474] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:09:41,476] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:09:41,477] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:14:41,489] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:14:41,489] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:14:41,490] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:14:41,490] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:19:41,501] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:19:41,501] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:19:41,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:19:41,503] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:20:57,038] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 20:20:57,038] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 20:20:57,038] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 20:20:57,047] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 20:20:57,763] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:20:57,763] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:20:57,764] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:20:57,764] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 20:20:57,765] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:20:57,767] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:20:57,767] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:20:57,768] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 20:20:57,768] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 20:20:57,768] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 20:20:57,770] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 20:21:15,176] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:21:15,257] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 20:21:15,268] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 20:21:15,376] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 20:21:15,381] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 20:21:15,385] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 20:21:15,388] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 20:21:15,401] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 20:21:15,407] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:21:15,422] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 20:21:15,436] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:21:15,436] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:21:15,438] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:21:15,438] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 20:21:15,442] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,442] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,444] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 20:21:15,444] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 20:21:15,642] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 20:21:15,647] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 20:21:15,660] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:21:15,661] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:21:15,676] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:21:15,676] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:21:15,677] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:21:15,679] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:21:15,696] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:21:15,697] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 20:21:15,712] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,712] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,712] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,712] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 20:21:15,714] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 20:21:15,727] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 20:21:16,163] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 20:21:20,734] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:21:20,735] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:21:26,718] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(Kaz74MZUToaopFwkKtz1Xg),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:21:26,722] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 20:21:27,152] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(_XWpPZhHRtitbjI6vUcWsA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:21:27,152] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 20:24:29,833] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 20:24:29,843] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 20:24:29,843] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 20:24:29,852] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 20:24:30,432] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:24:30,432] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:24:30,432] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:24:30,432] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 20:24:30,433] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:24:30,443] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:24:30,443] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:24:30,444] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 20:24:30,444] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 20:24:30,444] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 20:24:30,446] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 20:28:57,507] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:28:57,599] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 20:28:57,608] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 20:28:57,672] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 20:28:57,682] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 20:28:57,687] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 20:28:57,694] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 20:28:57,726] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 20:28:57,733] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:28:57,751] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 20:28:57,765] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:28:57,765] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:28:57,765] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:28:57,766] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 20:28:57,776] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,778] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,779] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 20:28:57,824] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 20:28:57,826] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 20:28:57,830] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 20:28:57,860] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:28:57,861] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:28:57,874] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:28:57,874] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:28:57,875] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:28:57,875] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:28:57,877] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:28:57,877] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 20:28:57,892] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,895] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,896] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,896] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 20:28:57,901] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 20:28:57,926] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 20:28:58,375] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 20:29:02,927] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:29:02,928] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:29:03,840] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(wmjqA2m2S0mB4fHOFhZsRg),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:29:03,840] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 20:29:03,992] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(RmlnyJ6BRRimI_ioZjxq0Q),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:29:03,992] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 20:29:21,195] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 20:29:21,195] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 20:29:21,197] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 20:29:21,204] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 20:29:21,536] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:29:21,536] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:29:21,536] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:29:21,536] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 20:29:21,537] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:29:21,538] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:29:21,538] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:29:21,539] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 20:29:21,539] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 20:29:21,539] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 20:29:21,540] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 20:29:38,465] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:29:38,543] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 20:29:38,550] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 20:29:38,591] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 20:29:38,595] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 20:29:38,601] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 20:29:38,604] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 20:29:38,631] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 20:29:38,637] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:29:38,649] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 20:29:38,664] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:29:38,665] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:29:38,665] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:29:38,666] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 20:29:38,677] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,678] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,678] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 20:29:38,678] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 20:29:38,717] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 20:29:38,718] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 20:29:38,745] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:29:38,746] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:29:38,754] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:29:38,754] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:29:38,754] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:29:38,754] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:29:38,756] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:29:38,911] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 20:29:38,928] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,928] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,928] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,929] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 20:29:38,931] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 20:29:39,018] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 20:29:39,264] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 20:29:44,033] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:29:44,034] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:30:00,242] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(nQeslSwxRWW61EYRMuv7xA),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:30:00,243] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 20:30:00,731] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(kIfHaHXvQOGBpIOTS2UXwg),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:30:00,732] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 20:34:44,042] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:34:44,042] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:34:44,046] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:34:44,047] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:39:44,047] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:39:44,047] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:39:44,049] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:39:44,049] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:40:20,961] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 20:40:20,962] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 20:40:20,962] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 20:40:20,969] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 20:40:21,361] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:40:21,361] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:40:21,361] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:40:21,361] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 20:40:21,362] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:40:21,362] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:40:21,363] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:40:21,363] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 20:40:21,363] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 20:40:21,363] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 20:40:21,364] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 20:40:39,044] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 20:40:39,133] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 20:40:39,143] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 20:40:39,184] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 20:40:39,195] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 20:40:39,198] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 20:40:39,201] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 20:40:39,213] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 20:40:39,238] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:40:39,316] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 20:40:39,330] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 20:40:39,330] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:40:39,331] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 20:40:39,331] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 20:40:39,337] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,337] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,338] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 20:40:39,338] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 20:40:39,352] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 20:40:39,357] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 20:40:39,513] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:40:39,515] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:40:39,536] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:40:39,536] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 20:40:39,537] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:40:39,537] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:40:39,543] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 20:40:39,543] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 20:40:39,656] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,659] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,659] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,659] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 20:40:39,663] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 20:40:39,678] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 20:40:40,033] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 20:40:44,680] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:40:44,680] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:40:49,514] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(r846SpNTQdGOidKzY9KNAw),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:40:49,515] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 20:40:49,948] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(pP0ItWzHSICQpVAOGC3ygw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 20:40:49,949] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 20:45:44,694] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:45:44,694] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:45:44,696] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:45:44,698] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:50:44,707] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:50:44,707] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:50:44,709] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:50:44,709] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 20:55:44,711] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 20:55:44,711] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 20:55:44,712] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 20:55:44,712] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:00:44,724] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:00:44,725] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:00:44,726] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:00:44,726] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:05:44,733] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:05:44,733] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:05:44,734] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:05:44,734] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:10:44,741] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:10:44,741] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:10:44,742] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:10:44,742] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:15:44,752] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:15:44,752] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:15:44,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:15:44,753] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:20:44,760] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:20:44,760] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:20:44,762] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:20:44,762] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:25:44,775] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:25:44,775] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:25:44,777] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:25:44,777] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:30:44,782] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:30:44,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:30:44,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:30:44,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:31:19,888] INFO [Controller id=0] New topics: [Set(test01)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test01,Some(JnjlZOVMSr6-exNYZVT51g),Map(test01-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 21:31:19,889] INFO [Controller id=0] New partition creation callback for test01-0 (kafka.controller.KafkaController)
[2023-10-19 21:31:19,950] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 21:35:44,785] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:35:44,786] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:35:44,787] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:35:44,787] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:40:44,798] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:40:44,799] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:40:44,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:40:44,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:45:44,815] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:45:44,815] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:45:44,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:45:44,816] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:50:44,816] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:50:44,817] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:50:44,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:50:44,817] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 21:53:54,949] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 21:53:54,949] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 21:53:54,950] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 21:53:54,986] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test01-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 21:53:55,803] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 21:53:55,803] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 21:53:55,803] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 21:53:55,803] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 21:53:55,805] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 21:53:55,807] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 21:53:55,808] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 21:53:55,811] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 21:53:55,812] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 21:53:55,812] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 21:53:55,815] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 21:54:31,019] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 21:54:31,100] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 21:54:31,110] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 21:54:31,384] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 21:54:31,389] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 21:54:31,391] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 21:54:31,394] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 21:54:31,409] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 21:54:31,421] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 21:54:31,437] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 21:54:31,466] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 21:54:31,466] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 21:54:31,466] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 21:54:31,467] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 21:54:31,471] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,472] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,472] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 21:54:31,472] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 21:54:31,634] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 21:54:31,646] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 21:54:31,664] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 21:54:31,665] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 21:54:31,667] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 21:54:31,667] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 21:54:31,667] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 21:54:31,668] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 21:54:31,674] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 21:54:31,674] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 21:54:31,728] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,729] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,729] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,729] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 21:54:31,732] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 21:54:31,747] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 21:54:32,174] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 21:54:36,760] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:54:36,761] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:54:47,991] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(dBEN7_nmQO-GLEwX9cnwJQ),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 21:54:47,993] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 21:54:48,542] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(OhDvH-A4Stuw3YLrkeJCSg),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 21:54:48,544] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 21:59:36,774] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 21:59:36,774] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 21:59:36,777] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 21:59:36,778] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:04:36,780] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:04:36,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:04:36,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 22:04:36,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:06:06,349] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:06:06,349] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:06:06,349] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:06:06,390] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:06:06,843] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:06:06,843] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:06:06,843] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:06:06,843] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:06:06,844] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:06:06,845] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:06:06,845] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:06:06,846] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:06:06,846] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:06:06,846] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:06:06,847] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:06:30,025] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:06:30,084] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:06:30,088] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:06:30,151] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:06:30,156] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:06:30,158] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:06:30,161] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:06:30,174] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:06:30,181] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:06:30,205] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:06:30,231] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:06:30,231] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:06:30,232] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:06:30,232] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:06:30,477] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,477] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,524] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:06:30,524] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:06:30,525] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:06:30,558] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:06:30,573] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:06:30,574] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:06:30,582] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:06:30,583] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:06:30,583] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:06:30,584] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:06:30,590] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:06:30,590] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:06:30,598] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,598] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,598] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,599] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:06:30,601] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:06:30,612] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:06:31,087] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:06:35,625] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:06:35,625] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:06:42,932] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(LjnQXobFQua07TCWYjQhSg),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:06:42,932] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 22:06:43,383] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(W0DmBSt5SFCJJKr_k24sXA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:06:43,385] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-19 22:07:08,990] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 22:07:08,993] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 22:07:56,253] INFO [Controller id=0] New topics: [Set(test01)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test01,Some(sYXBPQQYT1G4RL3qSbwYYA),Map(test01-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:07:56,253] INFO [Controller id=0] New partition creation callback for test01-0 (kafka.controller.KafkaController)
[2023-10-19 22:11:35,630] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:11:35,630] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:11:35,634] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 22:11:35,635] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:16:35,635] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:16:35,635] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:16:35,639] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 22:16:35,639] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:21:35,652] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:21:35,653] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:21:35,656] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 22:21:35,656] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:26:35,662] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:26:35,662] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:26:35,663] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 22:26:35,663] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:30:11,028] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:30:11,029] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:30:11,029] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:30:11,040] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test01-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:30:11,596] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:30:11,596] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:30:11,596] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:30:11,596] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:30:11,597] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:30:11,598] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:30:11,598] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:30:11,599] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:30:11,599] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:30:11,599] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:30:11,601] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:30:29,519] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:30:29,579] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:30:29,583] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:30:29,649] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:30:29,656] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:30:29,659] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:30:29,661] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:30:29,693] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:30:29,703] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:30:29,721] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:30:29,761] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:30:29,761] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:30:29,762] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:30:29,762] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:30:29,766] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:30:29,766] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:30:29,766] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:30:29,767] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:30:29,770] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:30:29,781] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:30:29,813] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:30:29,814] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:30:29,822] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:30:29,822] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:30:29,823] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:30:29,823] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:30:29,826] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:30:29,827] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:30:30,164] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:30:30,164] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:30:30,165] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:30:30,165] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:30:30,169] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:30:30,211] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:30:30,320] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:30:35,215] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:30:35,216] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:31:52,902] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(iVhuqYyiQF6Zk9SW9FCIFw),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:31:52,903] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 22:31:53,333] INFO [Controller id=0] New topics: [Set(test01)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test01,Some(T5023d2oSYKUq2vPbxxkCQ),Map(test01-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:31:53,335] INFO [Controller id=0] New partition creation callback for test01-0 (kafka.controller.KafkaController)
[2023-10-19 22:34:36,609] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 22:34:36,613] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 22:35:35,232] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:35:35,232] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:35:35,234] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 22:35:35,235] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:36:16,081] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:36:16,082] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:36:16,082] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:36:16,111] TRACE [Controller id=0] All leaders = test01-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:36:16,307] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:36:16,307] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:36:16,307] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:36:16,308] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:36:16,308] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:36:16,309] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:36:16,310] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:36:16,310] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:36:16,311] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:36:16,311] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:36:16,313] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:36:42,349] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:36:42,411] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-10-19 22:36:42,420] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:36:42,426] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:36:42,429] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:36:42,437] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:36:42,516] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 59) (kafka.controller.KafkaController)
[2023-10-19 22:36:42,592] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:36:42,623] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:36:42,645] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:36:42,645] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:36:42,646] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test01, isEventCheck) (kafka.controller.KafkaController)
[2023-10-19 22:36:42,646] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:36:42,650] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,650] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,652] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:36:42,652] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:36:42,662] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:36:42,675] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:36:42,692] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:36:42,716] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:36:42,762] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:36:42,762] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=test01,Partition=0,Replica=0] -> OnlineReplica, [Topic=isEventCheck,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:36:42,763] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:36:42,813] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:36:42,815] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(test01-0 -> OnlinePartition, isEventCheck-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:36:42,815] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-10-19 22:36:42,849] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,849] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,849] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,849] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:36:42,850] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:36:42,886] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:36:43,214] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:36:47,892] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:36:47,893] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:36:47,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 22:36:47,900] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:37:23,078] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:37:23,079] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:37:23,079] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:37:23,081] TRACE [Controller id=0] All leaders = test01-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:37:23,267] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:37:23,267] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:37:23,267] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:37:23,268] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:37:23,268] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:37:23,269] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:37:23,270] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:37:23,271] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:37:23,271] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:37:23,272] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:37:23,273] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:37:40,387] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:37:40,435] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:37:40,440] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:37:40,555] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:37:40,594] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:37:40,597] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:37:40,599] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:37:40,845] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:37:40,859] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:37:40,870] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:37:40,885] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:37:40,886] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:37:40,886] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:37:40,887] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:37:40,889] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,889] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,889] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:37:40,890] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:37:40,898] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:37:40,910] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:37:40,921] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:37:40,922] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:37:40,932] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:37:40,932] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:37:40,932] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:37:40,934] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:37:40,956] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:37:40,958] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:37:40,959] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:37:40,964] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,964] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,965] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,965] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:37:40,967] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:37:40,982] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:37:45,992] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:37:45,993] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:37:54,706] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(OresKKmtS42jQfEivZQ6sw),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:37:54,707] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 22:42:45,995] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:42:45,995] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:42:45,996] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 22:42:45,998] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:46:27,725] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:46:27,725] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:46:27,725] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:46:27,734] TRACE [Controller id=0] All leaders = isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:46:28,040] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:46:28,040] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:46:28,040] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:46:28,041] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:46:28,041] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:46:28,043] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:46:28,044] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:46:28,045] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:46:28,045] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:46:28,045] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:46:28,047] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:46:50,189] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:46:50,233] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:46:50,238] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:46:50,299] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:46:50,366] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:46:50,371] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:46:50,374] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:46:50,388] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:46:50,680] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:46:50,700] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:46:50,713] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:46:50,713] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:46:50,713] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:46:50,713] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:46:50,716] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,716] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,717] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:46:50,717] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:46:50,790] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:46:50,799] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:46:50,807] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:46:50,812] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:46:50,825] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:46:50,825] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:46:50,825] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:46:50,826] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:46:50,830] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:46:50,830] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:46:50,843] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,843] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,844] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,844] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:46:50,846] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:46:50,860] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:46:51,327] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:46:55,875] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:46:55,876] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:47:05,672] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(c3xClMg8SoCjE-HM3UbF0w),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:47:05,673] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 22:51:19,911] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:51:19,913] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:51:19,913] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:51:19,916] TRACE [Controller id=0] All leaders = isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:51:20,295] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:51:20,296] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:51:20,296] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:51:20,296] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:51:20,296] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:51:20,296] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:51:20,298] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:51:20,298] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:51:20,298] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:51:20,298] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:51:20,299] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:51:36,298] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:51:36,409] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:51:36,414] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:51:36,449] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:51:36,455] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:51:36,458] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:51:36,468] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:51:36,495] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:51:36,502] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:51:36,510] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:51:36,523] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:51:36,524] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:51:36,524] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:51:36,524] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:51:36,535] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,535] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,535] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:51:36,536] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:51:36,627] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:51:36,652] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:51:36,775] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:51:36,779] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:51:36,782] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:51:36,783] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:51:36,783] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:51:36,783] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:51:36,785] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:51:36,785] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:51:36,803] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,803] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,804] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,804] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:51:36,807] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:51:36,836] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:51:37,310] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:51:41,840] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:51:41,841] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:53:30,166] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(UGhEzFgRQKmFCIk97TYagQ),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:53:30,167] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 22:56:41,846] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:56:41,846] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:56:41,847] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 22:56:41,849] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 22:58:12,582] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 22:58:12,582] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 22:58:12,582] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 22:58:12,588] TRACE [Controller id=0] All leaders = isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 22:58:12,768] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:58:12,769] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:58:12,769] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:58:12,769] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 22:58:12,769] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:58:12,771] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:58:12,772] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:58:12,772] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 22:58:12,772] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 22:58:12,774] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 22:58:12,775] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 22:58:33,327] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 22:58:33,379] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 22:58:33,387] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 22:58:33,453] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 22:58:33,462] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 22:58:33,473] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 22:58:33,496] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 22:58:33,508] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 22:58:33,513] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:58:33,733] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 22:58:33,743] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 22:58:33,744] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:58:33,745] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 22:58:33,745] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 22:58:33,747] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,747] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,747] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 22:58:33,748] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 22:58:33,760] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 22:58:33,761] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 22:58:33,771] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:58:33,772] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:58:33,780] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:58:33,781] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 22:58:33,782] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:58:33,782] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:58:33,792] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 22:58:33,792] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 22:58:33,794] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 22:58:33,799] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,799] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,799] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,800] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 22:58:33,800] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 22:58:33,815] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 22:58:38,827] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 22:58:38,828] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 22:59:24,468] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(OKbxw-i3QZ-CaHYuOE-rKg),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 22:59:24,469] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 23:03:38,839] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:03:38,840] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:03:38,842] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 23:03:38,843] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:05:41,377] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-19 23:05:41,381] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-19 23:06:37,380] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 23:06:37,381] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 23:06:37,381] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 23:06:37,386] TRACE [Controller id=0] All leaders = isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 23:06:37,630] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:06:37,630] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:06:37,631] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:06:37,631] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 23:06:37,632] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:06:37,633] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:06:37,634] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:06:37,634] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 23:06:37,634] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 23:06:37,635] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 23:06:37,649] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 23:07:06,393] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:07:06,551] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 23:07:06,556] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 23:07:06,608] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 23:07:06,621] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 23:07:06,624] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 23:07:06,628] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 23:07:06,648] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 23:07:06,656] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:07:06,663] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 23:07:06,737] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:07:06,738] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 23:07:06,738] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 23:07:06,738] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 23:07:06,748] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,748] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,748] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 23:07:06,749] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 23:07:06,759] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 23:07:06,773] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 23:07:06,785] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:07:06,786] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:07:06,796] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:07:06,796] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:07:06,797] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:07:06,798] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:07:06,800] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:07:06,801] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 23:07:06,811] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,811] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,812] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,812] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 23:07:06,813] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 23:07:07,011] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 23:07:07,302] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 23:07:12,013] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:07:12,014] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:07:17,731] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(mgu0kWovSzSXNqwhLb_9BQ),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:07:17,732] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 23:12:12,028] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:12:12,028] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:12:12,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 23:12:12,031] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:14:42,269] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-19 23:14:42,269] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-19 23:14:42,270] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-19 23:14:42,284] TRACE [Controller id=0] All leaders = isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-19 23:14:42,534] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:14:42,534] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:14:42,534] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:14:42,534] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-19 23:14:42,535] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:14:42,537] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:14:42,538] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:14:42,538] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-19 23:14:42,538] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-19 23:14:42,540] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-19 23:14:42,543] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-19 23:15:01,324] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-19 23:15:01,410] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-19 23:15:01,425] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-19 23:15:01,598] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-19 23:15:01,632] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-19 23:15:01,636] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-19 23:15:01,638] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-19 23:15:01,652] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-19 23:15:01,658] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:15:01,677] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-19 23:15:01,698] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-19 23:15:01,698] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 23:15:01,793] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-19 23:15:01,793] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-19 23:15:01,795] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-19 23:15:01,817] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,817] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,817] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-19 23:15:01,822] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-19 23:15:01,834] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-19 23:15:01,849] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:15:01,849] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:15:01,852] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:15:01,852] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-19 23:15:01,853] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:15:01,853] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:15:01,859] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 23:15:01,867] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-19 23:15:01,867] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-19 23:15:01,880] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,880] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,880] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,883] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-19 23:15:01,884] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-19 23:15:01,897] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-19 23:15:06,898] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:15:06,899] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:15:41,327] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(b2KQ7HSHT8GiAP_LqILpFA),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:15:41,328] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-19 23:20:06,908] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:20:06,908] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:20:06,910] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 23:20:06,910] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:25:06,913] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:25:06,913] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:25:06,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-19 23:25:06,913] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:26:18,383] INFO [Controller id=0] New topics: [Set(1-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-destination,Some(cB4gUHYlRuquyBYtIoK7_w),Map(1-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:26:18,383] INFO [Controller id=0] New partition creation callback for 1-destination-0 (kafka.controller.KafkaController)
[2023-10-19 23:26:18,405] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-19 23:26:18,619] INFO [Controller id=0] New topics: [Set(1-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-positionUpdate,Some(CS8gzGyhTyqABujvEWB_hQ),Map(1-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:26:18,619] INFO [Controller id=0] New partition creation callback for 1-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-19 23:26:18,742] INFO [Controller id=0] New topics: [Set(1-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(1-moveSignal,Some(LwLwI79DTKWKj7q-7z9uFQ),Map(1-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:26:18,742] INFO [Controller id=0] New partition creation callback for 1-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-19 23:26:18,913] INFO [Controller id=0] New topics: [HashSet(boardUpdates)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(boardUpdates,Some(npN6zGgdR9yay9TUJZjRnw),Map(boardUpdates-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-19 23:26:18,913] INFO [Controller id=0] New partition creation callback for boardUpdates-0 (kafka.controller.KafkaController)
[2023-10-19 23:30:06,930] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:30:06,930] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:30:06,931] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:30:06,931] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:35:06,940] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:35:06,940] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:35:06,940] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:35:06,940] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:40:06,952] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:40:06,952] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:40:06,953] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:40:06,953] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:45:06,966] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:45:06,966] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:45:06,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:45:06,967] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:50:06,973] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:50:06,973] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:50:06,973] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:50:06,973] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-19 23:55:06,974] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-19 23:55:06,974] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-19 23:55:06,975] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-19 23:55:06,975] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:00:06,990] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:00:06,990] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:00:06,990] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:00:06,990] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:05:07,010] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:05:07,010] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:05:07,010] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:05:07,010] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:10:07,021] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:10:07,021] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:10:07,021] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:10:07,021] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:15:07,036] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:15:07,036] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:15:07,036] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:15:07,037] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:20:07,038] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:20:07,038] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:20:07,039] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:20:07,039] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:25:07,051] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:25:07,051] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:25:07,051] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:25:07,051] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:30:07,053] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:30:07,053] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:30:07,053] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:30:07,054] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:35:07,057] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:35:07,057] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:35:07,057] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:35:07,057] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:40:07,073] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:40:07,073] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:40:07,073] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:40:07,073] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:45:07,084] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:45:07,084] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:45:07,084] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:45:07,084] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:50:07,085] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:50:07,085] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:50:07,085] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:50:07,085] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 00:55:07,093] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 00:55:07,093] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 00:55:07,094] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 00:55:07,094] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:00:07,103] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:00:07,107] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:00:07,108] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:00:07,108] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:05:07,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:05:07,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:05:07,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:05:07,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:10:07,116] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:10:07,116] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:10:07,116] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:10:07,116] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:15:07,119] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:15:07,119] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:15:07,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:15:07,119] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:20:07,126] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:20:07,126] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:20:07,126] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:20:07,126] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:25:07,134] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:25:07,134] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:25:07,134] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:25:07,134] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:30:07,140] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:30:07,140] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:30:07,141] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:30:07,141] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:35:07,153] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:35:07,153] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:35:07,153] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:35:07,153] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:40:07,162] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:40:07,162] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:40:07,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:40:07,162] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:42:20,234] INFO [Controller id=0] New topics: [HashSet(2-destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-destination,Some(VOFyW_j9T0qfQAzojR4vRQ),Map(2-destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-20 01:42:20,234] INFO [Controller id=0] New partition creation callback for 2-destination-0 (kafka.controller.KafkaController)
[2023-10-20 01:42:20,257] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-20 01:42:20,376] INFO [Controller id=0] New topics: [HashSet(2-positionUpdate)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-positionUpdate,Some(MCEVEopIRcGTruaaLfeqPw),Map(2-positionUpdate-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-20 01:42:20,376] INFO [Controller id=0] New partition creation callback for 2-positionUpdate-0 (kafka.controller.KafkaController)
[2023-10-20 01:42:20,575] INFO [Controller id=0] New topics: [HashSet(2-moveSignal)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(2-moveSignal,Some(DxykFWKDT4etpYu37u-z5A),Map(2-moveSignal-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-20 01:42:20,575] INFO [Controller id=0] New partition creation callback for 2-moveSignal-0 (kafka.controller.KafkaController)
[2023-10-20 01:45:07,175] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:45:07,175] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:45:07,176] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:45:07,176] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:50:07,179] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:50:07,179] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:50:07,180] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:50:07,180] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 01:55:07,192] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 01:55:07,192] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 01:55:07,192] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 01:55:07,192] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:00:07,208] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:00:07,209] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:00:07,210] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:00:07,210] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:05:07,216] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:05:07,216] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:05:07,216] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:05:07,216] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:10:07,232] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:10:07,232] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:10:07,232] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:10:07,232] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:15:07,239] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:15:07,239] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:15:07,239] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:15:07,239] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:20:07,244] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:20:07,244] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:20:07,244] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:20:07,245] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:25:07,253] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:25:07,253] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:25:07,254] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:25:07,254] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:30:07,259] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:30:07,259] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:30:07,259] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:30:07,259] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:35:07,270] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:35:07,270] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:35:07,270] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:35:07,270] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:40:07,277] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:40:07,277] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:40:07,277] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:40:07,277] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:45:07,293] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:45:07,293] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:45:07,293] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:45:07,294] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:50:07,297] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:50:07,297] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:50:07,297] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:50:07,297] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 02:55:07,303] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 02:55:07,303] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 02:55:07,303] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 02:55:07,304] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:00:07,310] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:00:07,312] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:00:07,312] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:00:07,312] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:05:07,326] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:05:07,326] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:05:07,326] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:05:07,326] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:10:07,333] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:10:07,333] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:10:07,333] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:10:07,334] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:15:07,335] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:15:07,335] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:15:07,336] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:15:07,336] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:20:07,340] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:20:07,340] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:20:07,340] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:20:07,341] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:25:07,347] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:25:07,347] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:25:07,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:25:07,347] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:30:07,357] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:30:07,357] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:30:07,357] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:30:07,357] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:35:07,369] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:35:07,369] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:35:07,369] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:35:07,369] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:40:07,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:40:07,371] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:40:07,371] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:40:07,371] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:45:07,379] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:45:07,379] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:45:07,379] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:45:07,379] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:50:07,382] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:50:07,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:50:07,382] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:50:07,382] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 03:55:07,388] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 03:55:07,388] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 03:55:07,388] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 03:55:07,388] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:00:07,389] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:00:07,393] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:00:07,395] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:00:07,395] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:05:07,410] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:05:07,410] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:05:07,411] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:05:07,411] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:10:07,414] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:10:07,414] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:10:07,414] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:10:07,414] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:15:07,415] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:15:07,415] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:15:07,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:15:07,416] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:20:07,420] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:20:07,420] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:20:07,421] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:20:07,421] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:25:07,435] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:25:07,435] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:25:07,435] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:25:07,435] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:30:07,445] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:30:07,445] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:30:07,446] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:30:07,446] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:35:07,457] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:35:07,457] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:35:07,457] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:35:07,458] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:40:07,462] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:40:07,462] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:40:07,462] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:40:07,462] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:45:07,464] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:45:07,464] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:45:07,464] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:45:07,464] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:50:07,470] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:50:07,470] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:50:07,470] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:50:07,470] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 04:55:07,482] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 04:55:07,482] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 04:55:07,482] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 04:55:07,482] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 05:00:07,495] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 05:00:07,497] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 05:00:07,497] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 05:00:07,497] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 05:05:07,505] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 05:05:07,505] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 05:05:07,505] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 05:05:07,505] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 05:10:07,521] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 05:10:07,521] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 05:10:07,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 05:10:07,521] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 05:15:07,525] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 05:15:07,525] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 05:15:07,525] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 05:15:07,526] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 05:20:07,535] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 05:20:07,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 05:20:07,535] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 05:20:07,535] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 15:59:45,465] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 15:59:45,466] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 15:59:45,467] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 15:59:45,467] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 16:04:45,475] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:04:45,478] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:04:45,478] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 16:04:45,478] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 16:09:45,492] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:09:45,492] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:09:45,493] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 16:09:45,493] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 16:14:45,504] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:14:45,504] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:14:45,504] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 16:14:45,504] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 16:19:45,510] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:19:45,510] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:19:45,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-20 16:19:45,510] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 16:21:16,962] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-20 16:21:16,971] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-20 16:21:16,979] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-20 16:21:17,018] TRACE [Controller id=0] All leaders = 2-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-positionUpdate-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),2-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),boardUpdates-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),1-moveSignal-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-20 16:21:17,808] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-20 16:21:17,809] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-20 16:21:17,809] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-20 16:21:17,810] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-20 16:21:17,811] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-20 16:21:17,813] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-20 16:21:17,815] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-20 16:21:17,818] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-20 16:21:17,818] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-20 16:21:17,818] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-20 16:21:17,821] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-20 16:21:46,506] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-20 16:21:46,601] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-20 16:21:46,625] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-20 16:21:46,679] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-20 16:21:46,685] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-20 16:21:46,688] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-20 16:21:46,689] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-20 16:21:46,704] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-20 16:21:46,712] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-20 16:21:46,727] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-20 16:21:46,740] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-20 16:21:46,741] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-20 16:21:46,741] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-20 16:21:46,741] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-20 16:21:46,748] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-20 16:21:46,749] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-20 16:21:46,749] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-20 16:21:46,749] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-20 16:21:46,831] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-20 16:21:46,987] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-20 16:21:46,998] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-20 16:21:46,999] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-20 16:21:47,010] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-20 16:21:47,011] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-20 16:21:47,011] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-20 16:21:47,011] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-20 16:21:47,013] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-20 16:21:47,014] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-20 16:21:47,031] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-20 16:21:47,031] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-20 16:21:47,031] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-20 16:21:47,031] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-20 16:21:47,033] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-20 16:21:47,053] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-20 16:21:47,520] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-20 16:21:52,055] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:21:52,056] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:26:52,063] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:26:52,063] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:31:52,077] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:31:52,077] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:36:52,082] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:36:52,082] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:41:52,086] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:41:52,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:46:52,099] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:46:52,099] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:51:52,114] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:51:52,114] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 16:56:52,126] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 16:56:52,126] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:01:52,140] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:01:52,142] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:06:52,146] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:06:52,146] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:11:52,160] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:11:52,160] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:15:26,559] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(jGuVEW4dQi-2m2-x_bM8zw),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-20 17:15:26,560] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-20 17:15:26,625] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-20 17:15:26,910] INFO [Controller id=0] New topics: [Set(Destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Destination,Some(GDPg0buuToS3491ahtu0TA),Map(Destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-20 17:15:26,910] INFO [Controller id=0] New partition creation callback for Destination-0 (kafka.controller.KafkaController)
[2023-10-20 17:16:52,173] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:16:52,173] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:16:52,175] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-20 17:16:52,177] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 17:21:52,191] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:21:52,191] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:21:52,191] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-20 17:21:52,191] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-20 17:26:52,203] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-20 17:26:52,203] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-20 17:26:52,203] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-20 17:26:52,203] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:06:50,588] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:06:50,598] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:06:50,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-22 15:06:50,598] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:11:50,611] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:11:50,611] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:11:50,623] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-22 15:11:50,623] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:16:11,745] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-22 15:16:11,760] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-22 15:16:50,628] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:16:50,628] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:16:50,628] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-22 15:16:50,628] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:21:50,643] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:21:50,643] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:21:50,643] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2023-10-22 15:21:50,643] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:22:35,097] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(K--Z_Aq4SBmdJGNESQNMtw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 15:22:35,097] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-22 15:22:35,287] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-22 15:26:50,650] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:26:50,650] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:26:50,652] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:26:50,652] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:31:50,665] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:31:50,665] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:31:50,667] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:31:50,667] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:36:53,486] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:36:53,486] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:36:53,488] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:36:53,488] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:41:47,741] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:41:47,742] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:41:47,743] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:41:47,743] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:46:50,883] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:46:50,883] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:46:50,884] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:46:50,884] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:51:50,898] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:51:50,898] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:51:50,900] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:51:50,900] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 15:56:50,915] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 15:56:50,915] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 15:56:50,916] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 15:56:50,916] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:01:50,931] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:01:50,958] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:01:50,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:01:50,959] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:06:50,972] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:06:50,972] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:06:50,973] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:06:50,973] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:11:47,248] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:11:47,248] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:11:47,249] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:11:47,249] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:16:47,254] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:16:47,254] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:16:47,254] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:16:47,254] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:21:47,267] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:21:47,267] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:21:47,268] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:21:47,268] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:26:47,271] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:26:47,271] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:26:47,271] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:26:47,271] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:31:47,277] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:31:47,277] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:31:47,278] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:31:47,278] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:36:47,291] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:36:47,291] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:36:47,292] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:36:47,292] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:41:47,301] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:41:47,301] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:41:47,302] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:41:47,302] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:46:47,312] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:46:47,312] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:46:47,312] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:46:47,312] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:51:47,315] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:51:47,315] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:51:47,316] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:51:47,316] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 16:56:47,319] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 16:56:47,319] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 16:56:47,319] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 16:56:47,319] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:01:47,331] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:01:47,334] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:01:47,334] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:01:47,334] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:06:47,344] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:06:47,344] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:06:47,344] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:06:47,344] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:11:47,357] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:11:47,357] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:11:47,358] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:11:47,358] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:16:47,369] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:16:47,369] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:16:47,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:16:47,370] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:21:47,372] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:21:47,372] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:21:47,372] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:21:47,372] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:26:47,403] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:26:47,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:26:47,403] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:26:47,403] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:31:47,417] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:31:47,417] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:31:47,417] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:31:47,417] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:36:47,423] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:36:47,423] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:36:47,423] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:36:47,423] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:41:47,437] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:41:47,437] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:41:47,437] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:41:47,437] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:46:47,442] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:46:47,442] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:46:47,442] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:46:47,442] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:51:47,457] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:51:47,457] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:51:47,457] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:51:47,457] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 17:56:47,469] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 17:56:47,469] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 17:56:47,469] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 17:56:47,469] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:01:47,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:01:47,487] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:01:47,487] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:01:47,487] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:06:47,493] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:06:47,493] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:06:47,493] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:06:47,493] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:11:47,498] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:11:47,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:11:47,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:11:47,498] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:16:47,511] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:16:47,511] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:16:47,512] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:16:47,512] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:21:47,518] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:21:47,518] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:21:47,530] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:21:47,530] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:26:47,538] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:26:47,538] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:26:47,539] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:26:47,539] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:31:47,552] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:31:47,552] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:31:47,552] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:31:47,552] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:36:47,564] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:36:47,564] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:36:47,564] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:36:47,564] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:41:47,572] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:41:47,572] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:41:47,572] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:41:47,572] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:46:47,575] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:46:47,575] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:46:47,576] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:46:47,576] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:51:47,591] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:51:47,591] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:51:47,591] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:51:47,591] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:56:20,462] INFO [Controller id=0] New topics: [Set(EndPointDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(EndPointDron,Some(Kd2Qlih3S66SB1rn7BIT8A),Map(EndPointDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:56:20,462] INFO [Controller id=0] New partition creation callback for EndPointDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:56:20,491] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-22 18:56:20,592] INFO [Controller id=0] New topics: [HashSet(PointActualDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(PointActualDron,Some(ooLPtnM4RaCCP4HodCLr2g),Map(PointActualDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:56:20,592] INFO [Controller id=0] New partition creation callback for PointActualDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:56:20,676] INFO [Controller id=0] New topics: [HashSet(SpaceUpdateDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SpaceUpdateDron,Some(BaRozBGlS4q3nEGYoB5YZQ),Map(SpaceUpdateDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:56:20,676] INFO [Controller id=0] New partition creation callback for SpaceUpdateDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:56:47,602] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:56:47,602] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:56:47,603] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:56:47,603] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:57:04,771] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-22 18:57:04,771] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-22 18:57:04,771] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-22 18:57:04,784] TRACE [Controller id=0] All leaders = Destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),PointActualDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),EndPointDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),SpaceUpdateDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-22 18:57:05,430] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:57:05,430] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:57:05,430] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:57:05,431] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-22 18:57:05,432] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:57:05,433] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:57:05,434] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:57:05,435] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-22 18:57:05,435] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-22 18:57:05,435] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-22 18:57:05,437] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-22 18:58:30,281] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:58:30,356] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-22 18:58:30,359] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-22 18:58:30,433] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-22 18:58:30,441] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-22 18:58:30,445] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-22 18:58:30,449] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-22 18:58:30,463] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-22 18:58:30,488] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:58:30,508] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-22 18:58:30,678] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:58:30,679] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 18:58:30,679] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 18:58:30,679] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-22 18:58:30,695] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,695] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,695] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-22 18:58:30,696] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-22 18:58:30,764] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-22 18:58:30,767] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-22 18:58:30,790] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:58:30,791] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:58:30,800] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:58:30,801] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:58:30,802] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:58:30,802] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:58:30,811] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:58:30,811] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-22 18:58:30,864] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,864] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,864] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,864] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-22 18:58:30,866] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-22 18:58:30,891] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-22 18:58:31,309] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-22 18:58:31,971] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(jO9nxeJyRmWiANEC7cB3_Q),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:58:31,972] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-22 18:58:32,294] INFO [Controller id=0] New topics: [Set(Destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Destination,Some(umsxEEAeRwS-Gp2NwzzKhw),Map(Destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:58:32,295] INFO [Controller id=0] New partition creation callback for Destination-0 (kafka.controller.KafkaController)
[2023-10-22 18:58:35,892] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:58:35,893] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:58:35,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 18:58:35,899] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 18:58:51,915] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-22 18:58:51,916] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-22 18:58:51,916] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-22 18:58:51,922] TRACE [Controller id=0] All leaders = Destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-22 18:58:52,454] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:58:52,455] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:58:52,455] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:58:52,455] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-22 18:58:52,456] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:58:52,456] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:58:52,457] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:58:52,457] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-22 18:58:52,457] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-22 18:58:52,457] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-22 18:58:52,459] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-22 18:59:10,522] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 18:59:10,728] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-22 18:59:10,733] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-22 18:59:10,802] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-22 18:59:10,810] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-22 18:59:10,820] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-22 18:59:10,822] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-22 18:59:10,865] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-22 18:59:11,032] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:59:11,085] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-22 18:59:11,099] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-22 18:59:11,100] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 18:59:11,101] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 18:59:11,101] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-22 18:59:11,114] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,115] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,115] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-22 18:59:11,115] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-22 18:59:11,156] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-22 18:59:11,164] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-22 18:59:11,172] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:59:11,174] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:59:11,178] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:59:11,178] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 18:59:11,178] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:59:11,178] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:59:11,189] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 18:59:11,189] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-22 18:59:11,198] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,199] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,199] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,200] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-22 18:59:11,202] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-22 18:59:11,213] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-22 18:59:11,687] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-22 18:59:16,225] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 18:59:16,226] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 18:59:35,766] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(3ns6pwYfRdq4_yLdtV4hiQ),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:59:35,766] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-22 18:59:36,096] INFO [Controller id=0] New topics: [Set(EndPointDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(EndPointDron,Some(U11tHNszRgWnFf-wR2RSqw),Map(EndPointDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:59:36,098] INFO [Controller id=0] New partition creation callback for EndPointDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:59:36,244] INFO [Controller id=0] New topics: [Set(PointActualDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(PointActualDron,Some(W-aRdbfETxyBtFDbQdgu8w),Map(PointActualDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:59:36,244] INFO [Controller id=0] New partition creation callback for PointActualDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:59:36,331] INFO [Controller id=0] New topics: [Set(SpaceUpdateDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SpaceUpdateDron,Some(LJu3pFhjSOKJl5hCTl1daQ),Map(SpaceUpdateDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:59:36,331] INFO [Controller id=0] New partition creation callback for SpaceUpdateDron-0 (kafka.controller.KafkaController)
[2023-10-22 18:59:36,737] INFO [Controller id=0] New topics: [HashSet(Destination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Destination,Some(qWQS9fwkTBqM8tZ2zZas7A),Map(Destination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 18:59:36,737] INFO [Controller id=0] New partition creation callback for Destination-0 (kafka.controller.KafkaController)
[2023-10-22 19:04:16,231] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:04:16,233] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:04:16,235] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:04:16,236] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:08:32,231] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(_BjzmMj_Q6-Nairk3K3PFQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:08:32,231] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-22 19:09:16,247] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:09:16,247] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:09:16,250] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:09:16,250] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:14:16,251] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:14:16,251] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:14:16,252] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:14:16,253] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:19:16,269] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:19:16,269] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:19:16,270] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:19:16,270] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:24:16,285] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:24:16,285] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:24:16,286] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:24:16,286] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:29:16,294] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:29:16,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:29:16,295] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:29:16,295] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:32:48,169] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-22 19:32:48,180] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-22 19:34:16,306] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:34:16,306] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:34:16,307] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:34:16,307] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:34:29,075] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-10-22 19:34:29,080] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-10-22 19:34:29,080] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-10-22 19:34:29,102] TRACE [Controller id=0] All leaders = Destination-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),PointActualDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),isEventCheck-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),EndPointDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),SpaceUpdateDron-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-10-22 19:34:29,655] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 19:34:29,656] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 19:34:29,657] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 19:34:29,657] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-10-22 19:34:29,657] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 19:34:29,660] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 19:34:29,661] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 19:34:29,661] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-10-22 19:34:29,662] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-10-22 19:34:29,662] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-10-22 19:34:29,664] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2023-10-22 19:34:50,190] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-10-22 19:34:50,258] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-10-22 19:34:50,262] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-10-22 19:34:50,386] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-10-22 19:34:50,392] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-10-22 19:34:50,397] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-10-22 19:34:50,398] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-10-22 19:34:50,422] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2023-10-22 19:34:50,448] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-10-22 19:34:50,460] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-10-22 19:34:50,659] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-10-22 19:34:50,660] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 19:34:50,660] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-10-22 19:34:50,660] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-10-22 19:34:50,666] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,667] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,668] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-10-22 19:34:50,668] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-10-22 19:34:50,693] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-10-22 19:34:50,708] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-10-22 19:34:50,739] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 19:34:50,756] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 19:34:50,764] INFO [RequestSendThread controllerId=0] Controller 0 connected to 169.254.246.73:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-10-22 19:34:50,776] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 19:34:50,776] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-10-22 19:34:50,777] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 19:34:50,777] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 19:34:50,828] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-10-22 19:34:50,829] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-10-22 19:34:50,842] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,842] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,842] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,843] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-10-22 19:34:50,843] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-10-22 19:34:50,865] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-10-22 19:34:55,875] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:34:55,875] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:35:00,780] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-10-22 19:35:00,786] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-10-22 19:35:07,927] INFO [Controller id=0] New topics: [Set(isEventCheck)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(isEventCheck,Some(65mgjG3iRp-dUhI9FmuG4w),Map(isEventCheck-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:35:07,929] INFO [Controller id=0] New partition creation callback for isEventCheck-0 (kafka.controller.KafkaController)
[2023-10-22 19:35:08,198] INFO [Controller id=0] New topics: [Set(EndPointDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(EndPointDron,Some(uP7z5i-TSOKwForLPXFckQ),Map(EndPointDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:35:08,200] INFO [Controller id=0] New partition creation callback for EndPointDron-0 (kafka.controller.KafkaController)
[2023-10-22 19:35:08,300] INFO [Controller id=0] New topics: [Set(PointActualDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(PointActualDron,Some(f4kZDP_pT0Gl1TZAeIU-Uw),Map(PointActualDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:35:08,304] INFO [Controller id=0] New partition creation callback for PointActualDron-0 (kafka.controller.KafkaController)
[2023-10-22 19:35:08,467] INFO [Controller id=0] New topics: [Set(SpaceUpdateDron)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(SpaceUpdateDron,Some(FKg88cZPS3CZcwuvxJ-MUQ),Map(SpaceUpdateDron-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:35:08,467] INFO [Controller id=0] New partition creation callback for SpaceUpdateDron-0 (kafka.controller.KafkaController)
[2023-10-22 19:36:09,753] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(AxHe0_MXTxWAW6iCodFdfQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-10-22 19:36:09,753] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-10-22 19:39:55,890] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:39:55,890] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:39:55,893] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:39:55,894] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:44:55,901] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:44:55,901] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:44:55,903] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:44:55,903] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:49:55,906] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:49:55,906] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:49:55,907] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:49:55,907] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:54:55,913] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:54:55,913] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:54:55,915] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:54:55,915] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 19:59:55,922] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 19:59:55,922] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 19:59:55,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 19:59:55,923] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:04:55,936] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:04:55,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:04:55,940] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:04:55,940] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:09:55,955] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:09:55,955] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:09:55,956] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:09:55,956] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:14:55,957] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:14:55,957] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:14:55,958] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:14:55,958] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:19:55,962] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:19:55,962] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:19:55,963] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:19:55,963] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:24:55,964] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:24:55,964] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:24:55,966] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:24:55,966] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:29:55,977] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:29:55,977] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:29:55,978] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:29:55,978] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:34:55,985] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:34:55,985] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:34:55,986] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:34:55,986] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:39:55,996] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:39:55,996] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:39:55,997] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:39:55,997] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:44:56,011] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:44:56,011] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:44:56,011] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:44:56,011] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:49:56,013] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:49:56,014] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:49:56,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:49:56,014] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:54:56,024] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:54:56,024] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:54:56,024] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:54:56,024] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 20:59:56,036] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 20:59:56,036] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 20:59:56,036] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 20:59:56,037] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:04:56,047] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:04:56,048] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:04:56,049] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:04:56,049] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:09:56,064] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:09:56,064] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:09:56,065] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:09:56,065] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:14:56,066] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:14:56,066] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:14:56,066] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:14:56,066] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:19:56,069] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:19:56,069] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:19:56,069] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:19:56,069] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:24:56,074] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:24:56,074] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:24:56,074] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:24:56,074] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:29:56,086] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:29:56,086] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:29:56,087] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:29:56,087] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:34:56,088] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:34:56,088] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:34:56,088] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:34:56,088] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:39:56,093] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:39:56,093] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:39:56,094] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:39:56,094] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:44:56,096] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:44:56,096] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:44:56,096] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:44:56,096] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:49:56,102] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:49:56,102] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:49:56,103] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:49:56,103] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:54:56,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:54:56,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:54:56,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:54:56,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 21:59:56,115] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 21:59:56,115] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 21:59:56,115] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 21:59:56,115] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:04:56,120] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:04:56,125] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:04:56,125] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:04:56,125] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:09:56,135] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:09:56,135] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:09:56,136] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:09:56,136] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:14:56,150] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:14:56,150] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:14:56,150] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:14:56,151] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:19:56,155] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:19:56,155] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:19:56,156] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:19:56,156] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:24:56,164] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:24:56,164] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:24:56,165] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:24:56,166] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:29:56,169] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:29:56,169] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:29:56,170] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:29:56,170] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:34:56,173] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:34:56,173] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:34:56,174] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:34:56,174] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:39:56,178] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:39:56,178] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:39:56,179] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:39:56,179] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:44:56,192] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:44:56,192] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:44:56,192] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:44:56,193] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:49:56,197] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:49:56,197] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:49:56,197] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:49:56,198] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:54:56,210] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:54:56,210] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:54:56,210] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:54:56,210] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 22:59:56,217] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 22:59:56,217] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 22:59:56,217] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 22:59:56,217] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 23:04:56,226] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 23:04:56,247] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 23:04:56,248] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 23:04:56,248] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-22 23:09:56,251] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-22 23:09:56,251] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-22 23:09:56,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-22 23:09:56,262] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:16:14,734] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:16:14,737] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:16:14,740] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:16:14,740] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:21:14,749] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:21:14,749] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:21:14,762] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:21:14,762] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:26:14,765] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:26:14,765] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:26:14,765] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:26:14,766] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:31:14,780] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:31:14,780] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:31:14,782] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:31:14,782] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:36:14,796] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:36:14,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:36:14,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:36:14,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:41:14,802] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:41:14,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:41:14,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:41:14,802] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:46:14,818] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:46:14,818] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:46:14,818] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:46:14,818] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:51:14,833] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:51:14,833] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:51:14,833] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:51:14,833] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 09:56:14,836] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 09:56:14,836] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 09:56:14,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 09:56:14,836] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:01:14,851] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:01:14,852] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:01:14,853] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:01:14,853] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:06:14,867] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:06:14,867] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:06:14,867] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:06:14,867] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:11:14,878] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:11:14,878] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:11:14,879] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:11:14,879] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:16:14,896] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:16:14,896] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:16:14,896] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:16:14,896] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:21:14,907] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:21:14,907] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:21:14,907] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:21:14,908] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:26:14,914] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:26:14,914] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:26:14,914] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:26:14,914] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:31:14,923] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:31:14,923] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:31:14,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:31:14,923] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:36:14,932] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:36:14,932] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:36:14,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:36:14,932] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:41:14,941] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:41:14,941] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:41:14,942] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:41:14,942] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-10-23 10:46:14,956] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-10-23 10:46:14,956] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-10-23 10:46:14,956] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-10-23 10:46:14,956] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
